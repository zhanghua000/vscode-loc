{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Add Browser Breakpoint",
			"attach.node.process": "Anexar ao processo Node (prévia)",
			"base.cascadeTerminateToConfigurations.label": "A list of debug sessions which, when this debug session is terminated, will also be stopped.",
			"browser.address.description": "IP address or hostname the debugged browser is listening on.",
			"browser.attach.port.description": "Port to use to remote debugging the browser, given as `--remote-debugging-port` when launching the browser.",
			"browser.baseUrl.description": "URL base para resolver os caminhos baseUrl. baseURL é aparado ao mapear URLs para os arquivos no disco. O padrão é o domínio da URL de inicialização.",
			"browser.browserAttachLocation.description": "Forces the browser to attach in one location. In a remote workspace (through ssh or WSL, for example) this can be used to attach to a browser on the remote machine rather than locally.",
			"browser.browserLaunchLocation.description": "Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.",
			"browser.cleanUp.description": "What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.",
			"browser.cwd.description": "Diretório de trabalho opcional para o executável do tempo de execução.",
			"browser.disableNetworkCache.description": "Controla se deve ignorar o cache de rede para cada solicitação",
			"browser.env.description": "Dicionário opcional de pares de chaves/valor de ambiente para o navegador.",
			"browser.file.description": "Um arquivo html local a ser aberto no navegador",
			"browser.includeDefaultArgs.description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
			"browser.inspectUri.description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\r\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\r\n - `port` is the debug port that Chrome is listening on.\r\n - `browserInspectUri` is the inspector URI on the launched browser\r\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\r\n",
			"browser.launch.port.description": "Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.",
			"browser.pathMapping.description": "Um mapeamento de URLs/caminhos para pastas locais, para resolver scripts no Navegador para scripts em disco",
			"browser.profileStartup.description": "If true, will start profiling soon as the process launches",
			"browser.restart": "Whether to reconnect if the browser connection is closed",
			"browser.revealPage": "Focus Tab",
			"browser.runtimeArgs.description": "Argumentos opcionais passados para o executável do runtime.",
			"browser.runtimeExecutable.description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
			"browser.runtimeExecutable.edge.description": "Either 'canary', 'stable', 'dev', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or EDGE_PATH environment variable.",
			"browser.server.description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
			"browser.skipFiles.description": "Uma matriz de nomes de arquivos ou de pastas ou globs de caminho a serem ignorados durante a depuração.",
			"browser.smartStep.description": "Percorre automaticamente linhas não mapeadas em arquivos sourcemap. Por exemplo, o código que o TypeScript produz automaticamente ao gerar o Javascript para async/await ou outros recursos.",
			"browser.sourceMapPathOverrides.description": "Um conjunto de mapeamentos para regravar os locais dos arquivos de origem indicados pelo sourcemap, para seus respectivos locais no disco. Confira o LEIAME para obter detalhes.",
			"browser.sourceMaps.description": "Usar os source maps JavaScript (caso haja algum).",
			"browser.targetSelection": "Whether to attach to all targets that match the URL filter (\"automatic\") or ask to pick one (\"pick\").",
			"browser.timeout.description": "Retry for this number of milliseconds to connect to the browser. Default is 10000 ms.",
			"browser.url.description": "Procurará uma guia com esta url exata e anexará a ela, se encontrado",
			"browser.urlFilter.description": "Pesquisará uma página com essa URL e a anexará a ela, se encontrada. Pode ter * curingas.",
			"browser.userDataDir.description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.",
			"browser.vueComponentPaths": "A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.",
			"browser.webRoot.description": "Especifica o caminho absoluto do workspace para a raiz do servidor Web. Usado para resolver caminhos, como '/app.js', para arquivos no disco. A abreviação de um pathMapping como \"/\"",
			"chrome.attach.description": "Anexar a uma instância do Chrome já no modo depuração",
			"chrome.attach.label": "Chrome: Attach",
			"chrome.label": "Chrome (preview)",
			"chrome.launch.description": "Inicie o Chrome para depurar uma URL",
			"chrome.launch.label": "Chrome: Launch",
			"configuration.autoAttachMode": "Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.",
			"configuration.autoAttachMode.always": "Auto attach to every Node.js process launched in the terminal.",
			"configuration.autoAttachMode.disabled": "A anexação automática está desativada e não é mostrada na barra de status. ",
			"configuration.autoAttachMode.explicit": "Only auto attach when the `--inspect` is given.",
			"configuration.autoAttachMode.smart": "Auto attach when running scripts that aren't in a node_modules folder.",
			"configuration.autoAttachSmartPatterns": "Configura padrões glob para determinar quando anexar em modo \"inteligente\" `#debug.javascript.autoAttachFilter#`. `$KNOWN_TOOLS$` é substituído por uma lista de nomes de executores de código e de teste comuns. [Leia mais nos documentos do VS Code] (https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
			"configuration.autoExpandGetters": "Configures whether property getters will be expanded automatically. If this is false, the getter will appear as `get propertyName` and will only be evaluated when you click on it.",
			"configuration.automaticallyTunnelRemoteServer": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
			"configuration.breakOnConditionalError": "Whether to stop when conditional breakpoints throw an error. Note: your launch.json `type` must be prefixed with `pwa-` to use this, such as `pwa-node`.",
			"configuration.debugByLinkOptions": "Options used when debugging open links clicked from inside the debug terminal. Can be set to \"false\" to disable this behavior.",
			"configuration.npmScriptLensLocation": "Onde uma lente de código \"Executar\" e \"Depurar\" deve ser mostrada nos seus scripts npm. Pode estar em \"todos\" os scripts, na \"parte superior\" da seção de scripts ou \"nunca\".",
			"configuration.pickAndAttachOptions": "Default options used when debugging a process through the `Debug: Attach to Node.js Process` command",
			"configuration.suggestPrettyPrinting": "Whether to suggest pretty printing JavaScript code that looks minified when you step into it.",
			"configuration.terminalOptions": "Opções de inicialização padrão para o terminal de depuração JavaScript e scripts npm.",
			"configuration.usePreview": "Use o novo depurador JavaScript na pré-visualização para Node.js e Chrome.",
			"customDescriptionGenerator.description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\r\n      1. this.toString() // will call toString to print all objects\r\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\r\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\r\n      ",
			"debug.npm.edit": "Edit package.json",
			"debug.npm.noScripts": "Nenhum script npm encontrado no seu package.json",
			"debug.npm.noWorkspaceFolder": "Você precisa abrir uma pasta da área de trabalho para depurar scripts npm.",
			"debug.npm.parseError": "Não foi possível ler {0}: {1}",
			"debug.npm.script": "Debug NPM Script",
			"debug.terminal.attach": "Attach to Node.js Terminal Process",
			"debug.terminal.label": "Criar terminal de depuração de JavaScript",
			"debug.terminal.program.description": "Comando para executar no terminal Inicializado. Se não for fornecido, o terminal será aberto sem a inicialização de um programa.",
			"debug.terminal.snippet.label": "Executar \"npm start\" em um terminal de depuração",
			"debug.terminal.toggleAuto": "Toggle Terminal Node.js Auto Attach",
			"debug.terminal.welcome": "[Terminal de Depuração do JavaScript](command:extension.pwa-node-debug.createDebuggerTerminal)\r\n\r\nVocê pode usar o Terminal de Depuração do JavaScript para depurar processos do Node.js executados na linha de comando.\r\n\r\n[URL de Depuração](command:extension.js-debug.debugLink)",
			"debugLink.label": "Open Link",
			"edge.address.description": "When debugging webviews, the IP address or hostname the webview is listening on. Will be automatically discovered if not set.",
			"edge.attach.description": "Attach to an instance of Edge already in debug mode",
			"edge.attach.label": "Edge: Attach",
			"edge.label": "Edge (preview)",
			"edge.launch.description": "Launch Edge to debug a URL",
			"edge.launch.label": "Edge: Launch",
			"edge.port.description": "When debugging webviews, the port the webview debugger is listening on. Will be automatically discovered if not set.",
			"edge.useWebView.description": "(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.",
			"enableContentValidation.description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example.",
			"errors.timeout": "{0}: tempo limite após {1} ms",
			"extension.description": "Uma extensão para depurar programas Node.js e Chrome.",
			"extensionHost.label": "VS Code Extension Development (preview)",
			"extensionHost.launch.config.name": "Launch Extension",
			"extensionHost.launch.debugWebWorkerHost": "Configures whether we should try to attach to the web worker extension host.",
			"extensionHost.launch.debugWebviews": "Configura se devemos tentar anexar os modos de exibição da Web na instância VS Code iniciada. **Observação:** no momento, isso exige que a configuração `\"webview.experimental.useIframes\": true` funcione corretamente e ela só funcionará na área de trabalho do VS Code.",
			"extensionHost.launch.env.description": "Variáveis de ambiente passadas para o host de extensão.",
			"extensionHost.launch.rendererDebugOptions": "Chrome launch options used when attaching to the renderer process, with `debugWebviews` or `debugWebWorkerHost`.",
			"extensionHost.launch.runtimeExecutable.description": "Caminho absoluto para o VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Parar o host de extensão automaticamente após a inicialização.",
			"extensionHost.snippet.launch.description": "Iniciar uma extensão do VS Code no modo de depuração",
			"extensionHost.snippet.launch.label": "Desenvolvimento de Extensão do VS Code",
			"longPredictionWarning.disable": "Don't show again",
			"longPredictionWarning.message": "Está demorando um pouco para configurar seus pontos de interrupção. Você pode acelerar isso atualizando os 'outFiles' em seu launch.json.",
			"longPredictionWarning.noFolder": "Nenhuma pasta de espaço de trabalho aberta.",
			"longPredictionWarning.open": "Open launch.json",
			"node.address.description": "Endereço TCP/IP do processo a ser depurado. O padrão é 'localhost'.",
			"node.attach.attachExistingChildren.description": "Se deve tentar conectar-se a processos filhos já gerados.",
			"node.attach.attachSpawnedProcesses.description": "Se as variáveis de ambiente devem ser definidas no processo anexado para rastrear filhos gerados.",
			"node.attach.config.name": "Attach",
			"node.attach.continueOnAttach": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
			"node.attach.processId.description": "ID do processo usada para anexar.",
			"node.attach.restart.description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
			"node.attachSimplePort.description": "If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.",
			"node.console.title": "Node Debug Console",
			"node.disableOptimisticBPs.description": "Não defina pontos de interrupção em nenhum arquivo até que um sourcemap seja carregado nesse arquivo.",
			"node.label": "Node.js (preview)",
			"node.launch.args.description": "Argumentos de linha de comando passados para o programa.",
			"node.launch.autoAttachChildProcesses.description": "Anexar depurador a novos processos filhos automaticamente",
			"node.launch.config.name": "Launch",
			"node.launch.console.description": "Onde lançar o destino de depuração.",
			"node.launch.console.externalTerminal.description": "Terminal externo que pode ser configurado através das configurações de usuário",
			"node.launch.console.integratedTerminal.description": "Terminal integrado do VS Code",
			"node.launch.console.internalConsole.description": "Console de Depuração do VS Code (que não oferece suporte para ler a entrada de um programa)",
			"node.launch.cwd.description": "Caminho absoluto para o diretório de trabalho do programa que está sendo depurado.",
			"node.launch.env.description": "Variáveis de ambiente passadas para o programa. O valor `null` remove a variável do ambiente.",
			"node.launch.envFile.description": "Caminho absoluto para um arquivo que contém as definições de variável de ambiente.",
			"node.launch.logging": "Logging configuration",
			"node.launch.logging.cdp": "Caminho para o arquivo de log das mensagens do Protocolo Chrome DevTools",
			"node.launch.logging.dap": "Caminho para o arquivo de log para mensagens do Debug Adapter Protocol",
			"node.launch.outputCapture.description": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
			"node.launch.program.description": "Caminho absoluto para o programa. Valor gerado é adivinhado olhando package.json e arquivos abertos. Editar esse atributo.",
			"node.launch.restart.description": "Tente reiniciar o programa se ele sair com um código de saída diferente de zero.",
			"node.launch.runtimeArgs.description": "Argumentos opcionais passados para o executável do runtime.",
			"node.launch.runtimeExecutable.description": "Ambiente de execução a ser utilizado. Pode ser um caminho absoluto ou o nome de um runtime disponível na PATH. Se for omitido `node` é assumido.",
			"node.launch.runtimeSourcemapPausePatterns": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
			"node.launch.runtimeVersion.description": "Versão do ambiente de execução do `node` a utilizar. Requer o `nvm`",
			"node.launch.useWSL.deprecation": "' useWSL ' foi preterido e o suporte a ele será descontinuado. Em vez disso, use a extensão 'Remote - WSL'.",
			"node.launch.useWSL.description": "Use o Subsistema do Windows para Linux.",
			"node.localRoot.description": "Caminho para o diretório local que contém o programa.",
			"node.pauseForSourceMap.description": "Se é necessário aguardar o carregamento dos mapas de origem para cada script recebido. Isso tem uma sobrecarga de desempenho e pode ser desativado com segurança ao ficar sem disco, desde que o `rootPath` não esteja desativado.",
			"node.port.description": "Porta de depuração a ser associada. Padrão é 5858.",
			"node.processattach.config.name": "Attach to Process",
			"node.profileStartup.description": "If true, will start profiling soon as the process launches",
			"node.remoteRoot.description": "Caminho absoluto para o diretório remoto que contém o programa.",
			"node.resolveSourceMapLocations.description": "Uma lista de padrões de minimatch para locais (pastas e URLs) em que mapas de origem podem ser usados para resolver arquivos locais. Isso pode ser usado para evitar quebrar incorretamente o código mapeado de origem externa. Padrões podem ser prefixados com \"!\" para excluí-los. Pode ser definido como uma matriz vazia ou nula para evitar a restrição.",
			"node.showAsyncStacks.description": "Mostrar as chamadas assíncronas que levaram à pilha de chamadas atual.",
			"node.snippet.attach.description": "Anexar a um nó de programa em execução",
			"node.snippet.attach.label": "Node.js: Attach",
			"node.snippet.attachProcess.description": "Abrir o seletor de processos para selecionar o processo Node a anexar",
			"node.snippet.attachProcess.label": "Node.js: Anexar a processo",
			"node.snippet.electron.description": "Depurar o processo principal Electron",
			"node.snippet.electron.label": "Node.js: Principal Electron",
			"node.snippet.gulp.description": "Depurar tarefa gulp (certifique-se de ter um gulp local instalado no seu projeto)",
			"node.snippet.gulp.label": "Node.js: tarefa Gulp ",
			"node.snippet.launch.description": "Executar um programa node em modo de depuração",
			"node.snippet.launch.label": "Node. js: Executar programa",
			"node.snippet.mocha.description": "Debug mocha tests",
			"node.snippet.mocha.label": "Node.js: Testes Mocha",
			"node.snippet.nodemon.description": "Usar nodemon para relançar uma sessão de depuração em alterações de código fonte",
			"node.snippet.nodemon.label": "Node.js: Configuração Nodemon",
			"node.snippet.npm.description": "Executar um programa node através de um script de `debug` do npm",
			"node.snippet.npm.label": "Node.js: Executar via NPM",
			"node.snippet.remoteattach.description": "Anexar à porta de depuração de um programa node remoto",
			"node.snippet.remoteattach.label": "Node.js: Anexar a programa remoto",
			"node.snippet.yo.description": "Depurar o gerador yeoman (instalar executando `npm link` na pasta do projeto)",
			"node.snippet.yo.label": "Node.js: gerador Yeoman ",
			"node.sourceMapPathOverrides.description": "Um conjunto de mapeamentos para reescrever as localizações dos arquivos fontes de onde o sourcemap aponta para os seus locais no disco.",
			"node.sourceMaps.description": "Usar os source maps JavaScript (caso haja algum).",
			"node.stopOnEntry.description": "Parar o programa automaticamente após a inicialização.",
			"node.timeout.description": "Repetir a conexão com o Node.js após esse número de milissegundos. O padrão é 10000 ms.",
			"node.versionHint.descriotion": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not working.",
			"node.websocket.address.description": "Exact websocket address to attach to. If unspecified, it will be discovered from the address and port.",
			"outFiles.description": "Quando os source maps estão habilitados, esses padrões glob especificam os arquivos JavaScript gerados. Quando um padrão começa com '!', os arquivos são excluídos. Quando não especificado, o código gerado é esperado no mesmo diretório que sua origem.",
			"pretty.print.script": "Impressão bonita para depuração",
			"profile.start": "Take Performance Profile",
			"profile.stop": "Stop Performance Profile",
			"remove.browser.breakpoint": "Remove Browser Breakpoint",
			"remove.browser.breakpoint.all": "Remover todos os pontos de interrupção do navegador",
			"skipFiles.description": "Uma matriz de padrões glob para arquivos para ignorar quando Depurando. O padrão ' <node_internals>/* * ' corresponde a todos os módulos internos do node. js.",
			"smartStep.description": "Percorrer automaticamente o código gerado que não pode ser mapeado novamente para a origem original.",
			"start.with.stop.on.entry": "Iniciar Depuração e Parar ao Entrar",
			"timeouts.generalDescription": "Timeouts for several debugger operations",
			"timeouts.generalDescription.markdown": "Timeouts for several debugger operations",
			"timeouts.sourceMaps.description": "Timeouts related to source maps operations",
			"timeouts.sourceMaps.sourceMapCumulativePause.description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
			"timeouts.sourceMaps.sourceMapMinPause.description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
			"toggle.skipping.this.file": "Ativar/desativar a opção de Ignorar este Arquivo",
			"trace.boolean.description": "Trace may be set to 'true' to write diagnostic logs to the disk.",
			"trace.console.description": "Configura se os logs também são retornados ao console de depuração.",
			"trace.description": "Configura qual saída de diagnóstico é produzida.",
			"trace.level.description": "Configura o nível de logs registrados.",
			"trace.logFile.description": "Configura onde os logs são gravados no disco.",
			"trace.stdio.description": "Whether to return trace data from the launched application or browser.",
			"trace.tags.description": "Configura quais tipos de logs são registrados."
		},
		"/src/binder": {
			"breakpoint.provisionalBreakpoint": "Unbound breakpoint"
		},
		"/src/debugServer": {
			"breakpoint.provisionalBreakpoint": "Unbound breakpoint"
		},
		"/src/vsDebugServer": {
			"session.rootSessionName": "JavaScript debug adapter"
		},
		"/src/adapter/customBreakpoints": {
			"breakpoint.webglErrorNamed": "WebGL Error \"{0}\"",
			"breakpoint.webglErrorNamedDetails": "Paused on WebGL Error instrumentation breakpoint, error \"{0}\"",
			"breakpoint.cspViolationNamed": "CSP violation \"{0}\"",
			"breakpoint.cspViolationNamedDetails": "Paused on Content Security Policy violation instrumentation breakpoint, directive \"{0}\"",
			"breakpoint.instrumentationNamed": "Paused on instrumentation breakpoint \"{0}\"",
			"breakpoint.eventListenerNamed": "Paused on event listener breakpoint \"{0}\", triggered on \"{1}\"",
			"breakpoint.requestAnimationFrame": "Request Animation Frame",
			"breakpoint.cancelAnimationFrame": "Cancel Animation Frame",
			"breakpoint.animationFrameFired": "Animation Frame Fired",
			"breakpoint.createCanvasContext": "Create canvas context",
			"breakpoint.webglErrorFired": "WebGL Error Fired",
			"breakpoint.webglWarningFired": "WebGL Warning Fired",
			"breakpoint.scriptFirstStatement": "Script First Statement",
			"breakpoint.cspViolation": "Script Blocked by Content Security Policy",
			"breakpoint.setInnerHtml": "Set innerHTML",
			"breakpoint.setTimeoutFired": "setTimeout fired",
			"breakpoint.setIntervalFired": "setInterval fired",
			"breakpoint.createAudioContext": "Create AudioContext",
			"breakpoint.closeAudioContext": "Close AudioContext",
			"breakpoint.resumeAudioContext": "Resume AudioContext",
			"breakpoint.suspendAudioContext": "Suspend AudioContext"
		},
		"/src/adapter/debugAdapter": {
			"breakpoint.caughtExceptions": "Caught Exceptions",
			"breakpoint.uncaughtExceptions": "Uncaught Exceptions",
			"`errors.setExceptionBreakpoints.async.failed`": "Failed to configure the exceptions for which to pause due to: {0}",
			"errors.unknown": "Unknown error",
			"error.sourceNotFound": "Source not found",
			"error.sourceContentDidFail": "Unable to retrieve source content",
			"error.variableNotFound": "Variable not found",
			"error.threadNotFound": "Thread not found",
			"error.cannotPrettyPrint": "Unable to pretty print"
		},
		"/src/adapter/sources": {
			"source.skipFiles": "Skipped by skipFiles"
		},
		"/src/adapter/stackTrace": {
			"scope.global": "Global",
			"scope.local": "Local",
			"scope.with": "With Block",
			"scope.closure": "Closure",
			"scope.catch": "Catch Block",
			"scope.block": "Block",
			"scope.script": "Script",
			"scope.eval": "Eval",
			"scope.module": "Module",
			"scope.closureNamed": "Closure ({0})",
			"smartStepSkipLabel": "Skipped by smartStep",
			"scope.returnValue": "Return value"
		},
		"/src/adapter/threads": {
			"error.resumeDidFail": "Unable to resume",
			"error.pauseDidFail": "Unable to pause",
			"error.stepOverDidFail": "Unable to step next",
			"error.stepInDidFail": "Unable to step in",
			"error.stepOutDidFail": "Unable to step out",
			"error.stackFrameNotFound": "Stack frame not found",
			"error.evaluateOnAsyncStackFrame": "Unable to evaluate on async stack frame",
			"error.restartFrameAsync": "Cannot restart asynchronous frame",
			"reason.description.restart": "Em pausa na entrada do quadro",
			"error.threadNotPaused": "Thread is not paused",
			"error.threadNotPausedOnException": "Thread is not paused on exception",
			"error.evaluateDidFail": "Unable to evaluate",
			"pause.assert": "Paused on assert",
			"pause.debugCommand": "Paused on debug() call",
			"pause.DomBreakpoint": "Paused on DOM breakpoint",
			"pause.exception": "Paused on exception",
			"pause.promiseRejection": "Em pausa na rejeição da promessa",
			"pause.breakpoint": "Paused on breakpoint",
			"pause.default": "Paused",
			"pause.instrumentation": "Paused on instrumentation breakpoint",
			"pause.xhr": "Paused on XMLHttpRequest or fetch",
			"pause.oom": "Paused before Out Of Memory exception",
			"pause.eventListener": "Paused on event listener",
			"warnings.handleSourceMapPause.didNotWait": "WARNING: Processing source-maps of {0} took longer than {1} ms so we continued execution without waiting for all the breakpoints for the script to be set."
		},
		"/src/adapter/variables": {
			"error.variableNotFound": "Variable not found",
			"error.emptyExpression": "Cannot set an empty value",
			"error.invalidExpression": "Invalid expression",
			"error.setVariableDidFail": "Unable to set variable value",
			"error.unknown": "Unknown error",
			"error.customValueDescriptionGeneratorFailed": "{0} (couldn't describe: {1})"
		},
		"/src/dap/errors": {
			"NVS_HOME.not.found.message": "Attribute 'runtimeVersion' requires Node.js version manager 'nvs' or 'nvm' to be installed.",
			"NVM_HOME.not.found.message": "Atributo 'runtimeVersion' requer gerenciador de versão 'nvm-windows' ou 'nvs' para Node.js.",
			"runtime.version.not.found.message": "Node.js version '{0}' not installed using version manager {1}.",
			"VSND2011": "Não é possível iniciar o destino de depuração no terminal ({0}).",
			"VSND2029": "Não é possível carregar as variáveis de ambiente do arquivo ({0}).",
			"runtime.node.notfound": "Can't find Node.js binary \"{0}\": {1}. Make sure Node.js is installed and in your PATH, or set the \"runtimeExecutable\" in your launch.json",
			"runtime.node.outdated": "The Node version in \"{0}\" is outdated (version {1}), we require at least Node 8.x.",
			"invalidHitCondition": "Invalid hit condition \"{0}\". Expected an expression like \"> 42\" or \"== 2\".",
			"profile.error.generic": "An error occurred taking a profile from the target.",
			"profile.error.concurrent": "Please stop the running profile before starting a new one.",
			"noBrowserInstallFound": "Unable to find a {0} installation on your system. Try installing it, or providing an absolute path to the browser in the \"runtimeExecutable\" in your launch.json.",
			"browserVersionNotFound": "Unable to find {0} version {1}. Available auto-discovered versions are: {2}. You can set the \"runtimeExecutable\" in your launch.json to one of these, or provide an absolute path to the browser executable.",
			"error.browserLaunchError": "Unable to launch browser: \"{0}\"",
			"error.browserAttachError": "Unable to attach to browser",
			"error.threadNotFound": "Target page not found. You may need to update your \"urlFilter\" to match the page you want to debug.",
			"asyncScopesNotAvailable": "Variables not available in async stacks",
			"breakpointSyntaxError": "Syntax error setting breakpoint with condition {0} on line {1}: {2}",
			"sourcemapParseError": "Could not read source map for {0}: {1}"
		},
		"/src/ui/autoAttach": {
			"details": "Details"
		},
		"/src/ui/companionBrowserLaunch": {
			"cannotDebugInBrowser": "We can't launch a browser in debug mode from here. Open this workspace in VS Code on your desktop to enable debugging."
		},
		"/src/ui/debugLinkUI": {
			"debugLink.invalidUrl": "The URL provided is invalid",
			"yes": "Sim",
			"never": "Nunca",
			"debugLink.savePrompt": "Deseja salvar uma configuração no launch.json para obter acesso fácil posteriormente?",
			"no": "Não"
		},
		"/src/ui/debugNpmScript": {
			"debug.npm.noWorkspaceFolder": "Você precisa abrir uma pasta da área de trabalho para depurar scripts npm.",
			"debug.npm.parseError": "Não foi possível ler {0}: {1}",
			"debug.npm.noScripts": "Nenhum script npm encontrado no seu package.json",
			"debug.npm.notFound.open": "Edit package.json"
		},
		"/src/ui/experimentEnlist": {
			"experimentEnlist": "You can turn the new debugger off using the \"debug.javascript.usePreview\" setting. Please report any problems you run into, thanks for trying it out!"
		},
		"/src/ui/longPredictionUI": {
			"longPredictionWarning.message": "Está demorando um pouco para configurar seus pontos de interrupção. Você pode acelerar isso atualizando os 'outFiles' em seu launch.json.",
			"longPredictionWarning.open": "Open launch.json",
			"longPredictionWarning.disable": "Don't show again",
			"longPredictionWarning.noFolder": "Nenhuma pasta de espaço de trabalho aberta."
		},
		"/src/ui/npmScriptLens": {
			"codelens.debug": "{0} Debug"
		},
		"/src/ui/prettyPrint": {
			"yes": "Yes",
			"no": "No",
			"never": "Never"
		},
		"/src/ui/processPicker": {
			"process.id.error": "Anexar ao processo: '{0}' não se parece com uma id do processo.",
			"process.picker.error": "Falha no seletor de processo ({0})",
			"pickNodeProcess": "Escolher o processo Node.js para anexar",
			"process.id.port.signal": "ID do processo: {0}, porta de depuração: {1} ({2})",
			"process.id.signal": "ID do processo: {0} ({1})",
			"cannot.enable.debug.mode.error": "Anexar ao processo: não é possível habilitar o modo de depuração para o processo '{0}' ({1})."
		},
		"/src/ui/terminalLinkHandler": {
			"terminalLinkHover.debug": "Debug URL",
			"cantOpenChromeOnWeb": "We can't launch a browser in debug mode from here. If you want to debug this webpage, open this workspace from VS Code on your desktop."
		},
		"/src/adapter/breakpoints/userDefinedBreakpoint": {
			"breakpoint.provisionalBreakpoint": "Unbound breakpoint"
		},
		"/src/adapter/console/queryObjectsMessage": {
			"queryObject.invalidObject": "Only objects can be queried",
			"queryObject.couldNotQuery": "Could not query the provided object",
			"queryObject.errorPreview": "Could generate preview: {0}"
		},
		"/src/adapter/console/textualMessage": {
			"console.assert": "Assertion failed"
		},
		"/src/adapter/profiling/basicCpuProfiler": {
			"profile.cpu.label": "CPU Profile",
			"profile.cpu.description": "Generates a .cpuprofile file you can open in the Chrome devtools"
		},
		"/src/targets/browser/browserAttacher": {
			"chrome.targets.placeholder": "Select a tab",
			"attach.cannotConnect": "Cannot connect to the target at {0}: {1}"
		},
		"/src/targets/node/nodeAttacher": {
			"node.attach.restart.message": "Lost connection to debugee, reconnecting in {0}ms\r\n"
		},
		"/src/targets/node/nodeBinaryProvider": {
			"runtime.node.notfound.enoent": "path does not exist",
			"runtime.node.notfound.spawnErr": "error getting version: {0}"
		},
		"/src/targets/node/terminalProgramLauncher": {
			"node.console.title": "Node Debug Console"
		},
		"/src/ui/configuration/chromiumDebugConfigurationProvider": {
			"existingBrowser.debugAnyway": "Debug Anyway",
			"existingBrowser.alert": "It looks like a browser is already running from {0}. Please close it before trying to debug, otherwise VS Code may not be able to connect to it.",
			"existingBrowser.location.default": "an old debug session",
			"existingBrowser.location.userDataDir": "the configured userDataDir",
			"cancel": "Cancel",
			"chrome.launch.name": "Iniciar o Chrome em relação a localhost"
		},
		"/src/ui/configuration/nodeDebugConfigurationProvider": {
			"debug.terminal.label": "Criar terminal de depuração de JavaScript",
			"node.launch.script": "Run Script: {0}",
			"node.launch.currentFile": "Run Current File"
		},
		"/src/ui/configuration/nodeDebugConfigurationResolver": {
			"program.not.found.message": "Não foi possível encontrar um programa para depurar",
			"node.launch.config.name": "Launch Program",
			"mern.starter.explanation": "Executar configuração para o projeto {0} criado.",
			"program.guessed.from.package.json.explanation": "Executar a criação de configuraçao baseada no 'package.json'.",
			"outFiles.explanation": "Ajustar o(s) padrão(ões) glob no atributo 'outFiles' para que eles cubram o JavaScript gerado."
		},
		"/src/ui/profiling/breakpointTerminationCondition": {
			"profile.termination.breakpoint.label": "Pick Breakpoint",
			"profile.termination.breakpoint.description": "Run until a specific breakpoint is hit",
			"breakpointTerminationWarnSlow": "Profiling with breakpoints enabled can change the performance of your code. It can be useful to validate your findings with the \"duration\" or \"manual\" termination conditions.",
			"breakpointTerminationWarnConfirm": "Got it!"
		},
		"/src/ui/profiling/durationTerminationCondition": {
			"profile.termination.duration.label": "Duration",
			"profile.termination.duration.description": "Run for a specific amount of time",
			"profile.termination.duration.inputTitle": "Duration of Profile",
			"profile.termination.duration.placeholder": "Profile duration in seconds, e.g \"5\"",
			"profile.termination.duration.invalidFormat": "Insira um número",
			"profile.termination.duration.invalidLength": "Please enter a number greater than 1"
		},
		"/src/ui/profiling/manualTerminationCondition": {
			"profile.termination.duration.label": "Manual",
			"profile.termination.duration.description": "Run until manually stopped"
		},
		"/src/ui/profiling/uiProfileManager": {
			"profile.sessionState": "Profiling",
			"profile.status.single": "$(loading) Click to Stop Profiling ({0})",
			"profile.status.default": "$(loading) Click to Stop Profiling",
			"profile.status.multiSession": "$(loading) Click to Stop Profiling ({0} sessions)",
			"yes": "Yes",
			"no": "No",
			"profile.alreadyRunning": "A profiling session is already running, would you like to stop it and start a new session?",
			"profile.type.title": "Type of profile:",
			"profile.termination.title": "How long to run the profile:"
		},
		"/src/ui/profiling/uiProfileSession": {
			"profile.saving": "Saving"
		}
	}
}