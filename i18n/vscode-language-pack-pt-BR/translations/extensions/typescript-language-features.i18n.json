{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Recursos da Linguagem TypeScript e JavaScript",
			"description": "Fornece suporte à linguagem rica pra JavaScript e TypeScript.",
			"reloadProjects.title": "Recarregar Projeto",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Funções completas com a assinatura do parâmetro.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Ativar/desativar a exibição de conclusões em valores potencialmente indefinidos que inserem uma chamada em cadeia opcional. Requer TS 3.7+ e verificações nulas estritas para serem ativadas.",
			"typescript.tsdk.desc": "Specifies the folder path to the tsserver and lib*.d.ts files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\r\n\r\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\r\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\r\n\r\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
			"typescript.disableAutomaticTypeAcquisition": "Desabilita a aquisição automática de tipo. A aquisição automática de tipo busca pacotes `@types` do npm para melhorar o IntelliSense para bibliotecas externas.",
			"typescript.enablePromptUseWorkspaceTsdk": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
			"typescript.tsserver.log": "Habilita o log do servidor TS para um arquivo. Este log pode ser usado para diagnosticar problemas do servidor de TS. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.tsserver.pluginPaths": "Additional paths to discover TypeScript Language Service plugins.",
			"typescript.tsserver.pluginPaths.item": "Pode ser um caminho absoluto ou relativo. Caminho relativo será resolvido a partir da pasta da área de trabalho.",
			"typescript.tsserver.trace": "Habilita o rastreamento de mensagens enviadas para o servidor de TS. Este rastreamento pode ser usado para diagnosticar problemas do servidor de TS. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.validate.enable": "Habilita/Desabilita a validação TypeScript.",
			"typescript.format.enable": "Habilita/Desabilita o formatador padrão TypeScript.",
			"javascript.format.enable": "Habilita/Desabilita o formatador padrão JavaScript.",
			"format.insertSpaceAfterCommaDelimiter": "Define o tratamento de espaços após um delimitador vírgula.",
			"format.insertSpaceAfterConstructor": "Defines space handling after the constructor keyword.",
			"format.insertSpaceAfterSemicolonInForStatements": "Define o tratamento de espaços após um ponto e vírgula em uma declaração.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Define o tratamento de espaços após um operador binário.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Define o tratamento de espaços após palavras-chave em um comando de controle de fluxo.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Define o tratamento de espaços após uma palavra-chave de função para funções anônimas.",
			"format.insertSpaceBeforeFunctionParenthesis": "Define o tratamento de espaços antes de parênteses do argumento de função.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Define a manipulação de espaços após abrir e antes de fechar parênteses não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Define a manipulação de espaços após abrir e antes de fechar colchetes não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Defines space handling after opening and before closing non-empty braces.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Define o tratamento de espaços após abrir e antes de fechar com chaves não vazias.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Define o tratamento de espaços após a abertura e antes do fechamento de chaves da expressão JSX.",
			"format.insertSpaceAfterTypeAssertion": "Defines space handling after type assertions in TypeScript.",
			"format.placeOpenBraceOnNewLineForFunctions": "Define-se uma chave de abertura é colocada em uma nova linha para funções ou não.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Define-se uma chave de abertura é colocada em uma nova linha para blocos de controle ou não.",
			"format.semicolons": "Define o tratamento de ponto-e-vírgula opcionais. Requer o uso do TypeScript 3,7 ou mais recente no espaço de trabalho.",
			"format.semicolons.ignore": "Não insira ou remova nenhum ponto e vírgula.",
			"format.semicolons.insert": "Inserir ponto e vírgula no final da instrução.",
			"format.semicolons.remove": "Remova pontos-e-vírgula desnecessários.",
			"javascript.validate.enable": "Habilitar/Desabilitar validação JavaScript.",
			"goToProjectConfig.title": "Ir para a Configuração do Projeto",
			"javascript.referencesCodeLens.enabled": "Habilitar/desabilitar referências CodeLens em arquivos JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Ativar/desativar referências CodeLens em todas as funções em arquivos JavaScript.",
			"typescript.referencesCodeLens.enabled": "Habilitar/desabilitar referências CodeLens em arquivos TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar o CodeLens de referências em todas as funções nos arquivos TypeScript.",
			"typescript.implementationsCodeLens.enabled": "Habilitar/desabilitar implementações CodeLens. Este CodeLens mostra as implementações de uma interface.",
			"typescript.openTsServerLog.title": "Abrir arquivo de log do servidor TS",
			"typescript.restartTsServer": "Reiniciar o servidor TS",
			"typescript.selectTypeScriptVersion.title": "Selecione a Versão do TypeScript...",
			"typescript.reportStyleChecksAsWarnings": "Reportar verificações de estilo como avisos.",
			"javascript.implicitProjectConfig.checkJs": "Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting.",
			"typescript.npm": "Specifies the path to the npm executable used for Automatic Type Acquisition.",
			"typescript.check.npmIsInstalled": "Verificar se o NPM está instalado para aquisição automática de tipo.",
			"configuration.suggest.names": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
			"typescript.tsc.autoDetect": "Controla a auto detecção de tarefas tsc.",
			"typescript.tsc.autoDetect.off": "Desabilite esse recurso.",
			"typescript.tsc.autoDetect.on": "Criar ambas as tarefas de compilação e monitoramento.",
			"typescript.tsc.autoDetect.build": "Só crie tarefas de compilação de execução únicas.",
			"typescript.tsc.autoDetect.watch": "Crie somente tarefas de compilação e monitoramento.",
			"typescript.problemMatchers.tsc.label": "Problemas TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemas TypeScript (modo observação)",
			"configuration.suggest.paths": "Ativar/desativar sugestões de caminhos em declarações de importação e chamadas necessárias. ",
			"configuration.tsserver.useSeparateSyntaxServer": "Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente a operações relacionadas à sintaxe, tais como o cálculo, dobragem ou computação de símbolos de documento. Requer o uso do TypeScript 3.4.0 ou mais recente no workspace.",
			"configuration.tsserver.maxTsServerMemory": "Definir a quantidade máxima de memória (em MB) para alocar para o processo do servidor TypeScript",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimental) Ativa o relatório de erros em todo o projeto.",
			"typescript.locale": "Sets the locale used to report JavaScript and TypeScript errors. Default of `null` uses VS Code's locale.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting.",
			"configuration.suggest.autoImports": "Enable/disable auto import suggestions.",
			"taskDefinition.tsconfig.description": "O arquivo tsconfig que define a compilação do TS.",
			"javascript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
			"typescript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
			"typescript.preferences.quoteStyle": "Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports.",
			"typescript.preferences.importModuleSpecifier": "Estilo de caminho preferencial para importação automática.",
			"typescript.preferences.importModuleSpecifier.auto": "Selecione automaticamente o estilo do caminho de importação. Prefira usar uma importação relativa se 'baseUrl' estiver configurado e o caminho relativo tiver menos segmentos que a importação não relativa.",
			"typescript.preferences.importModuleSpecifier.relative": "Relativo à localização do arquivo.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Baseado na 'baseUrl' configurada em seu 'jsconfig.json' / 'tsconfig.json'.",
			"typescript.preferences.importModuleSpecifierEnding": "Preferred path ending for auto imports.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Use as configurações do projeto para selecionar um padrão.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Shorten `./component/index.js` to `./component`.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Shorten `./component/index.js` to `./component/index`.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Não encurtar as terminações de caminho; incluir a extensão `.js`.",
			"typescript.preferences.includePackageJsonAutoImports": "Enable/disable searching `package.json` dependencies for available auto imports.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Search dependencies based on estimated performance impact.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Always search dependencies.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Never search dependencies.",
			"typescript.updateImportsOnFileMove.enabled": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Perguntar sobre cada renomear.",
			"typescript.updateImportsOnFileMove.enabled.always": "Sempre atualize caminhos automaticamente.",
			"typescript.updateImportsOnFileMove.enabled.never": "Nunca renomeie ou solicite caminhos.",
			"typescript.autoClosingTags": "Enable/disable automatic closing of JSX tags.",
			"typescript.suggest.enabled": "Ativar/desativar sugestões de preenchimento automático.",
			"configuration.surveys.enabled": "Habilita/desabilita pesquisas ocasionais que nos ajudam a melhorar o JavaScript do VS Code e o suporte ao TypeScript.",
			"configuration.suggest.completeJSDocs": "Ativar/desativar sugestão para completar JSDoc comentários.",
			"configuration.tsserver.watchOptions": "Configure which watching strategies should be used to keep track of files and directories. Requires using TypeScript 3.8+ in the workspace.",
			"configuration.tsserver.watchOptions.watchFile": "Estratégia de como arquivos individuais são observados.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Verificar se há alterações em todos os arquivos várias vezes por segundo em um intervalo fixo.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Use uma fila dinâmica em que os arquivos modificados com menos frequência serão verificados com menos frequência.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Attempt to use the operating system/file system’s native events for file changes.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Attempt to use the operating system/file system’s native events to listen for changes on a file’s containing directories. This can use fewer file watchers, but might be less accurate.",
			"configuration.tsserver.watchOptions.watchDirectory": "Estratégia de como toda as árvores de diretórios são observadas em sistemas que não possuem funcionalidade de observação de arquivos recursiva.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Check every directory for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Use uma fila dinâmica onde diretórios modificados com menos frequência serão verificados com menos frequência.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para mudanças no diretório.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Ao usar eventos do sistema de arquivos, esta opção especifica a estratégia de votação que é usada quando o sistema fica sem observadores de arquivos nativos e/ou não suporta observadores nativos de arquivos.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Check every file for changes several times a second at a fixed interval.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Checar todos os arquivos por alterações várias vezes por segundo, mas usando heurísticas para verificar certos tipos de arquivos com menos frequência do que outros.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Use uma fila dinâmica em que os arquivos modificados com menos frequência serão verificados com menos frequência.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
			"typescript.preferences.useAliasesForRenames": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
			"typescript.workspaceSymbols.scope": "Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Search all open JavaScript or TypeScript projects for symbols. Requires using TypeScript 3.9 or newer in the workspace.",
			"typescript.workspaceSymbols.scope.currentProject": "Only search for symbols in the current JavaScript or TypeScript project.",
			"codeActions.refactor.extract.constant.title": "Extrair constante",
			"codeActions.refactor.extract.constant.description": "Extrair expressão para constante.",
			"codeActions.refactor.extract.function.title": "Extrair função",
			"codeActions.refactor.extract.function.description": "Extrair expressão para método ou função.",
			"codeActions.refactor.extract.type.title": "Tipo de extração",
			"codeActions.refactor.extract.type.description": "Extraia o tipo para um alias de tipo.",
			"codeActions.refactor.extract.interface.title": "Extrair Interface",
			"codeActions.refactor.extract.interface.description": "Extraia o tipo para uma interface.",
			"codeActions.refactor.rewrite.import.title": "Converter importação",
			"codeActions.refactor.rewrite.import.description": "Converter entre importações nomeadas e importações de namespace.",
			"codeActions.refactor.rewrite.export.title": "Converter exportação",
			"codeActions.refactor.rewrite.export.description": "Converter entre a exportação padrão e a exportação nomeada.",
			"codeActions.refactor.move.newFile.title": "Mover para um novo arquivo",
			"codeActions.refactor.move.newFile.description": "Mova a expressão para um novo arquivo.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Reescrever chaves de seta",
			"codeActions.refactor.rewrite.arrow.braces.description": "Adicione ou remova as chaves em uma função da seta.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Converter parâmetros para objeto não estruturado",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Gerar acessadores",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Gerar acessadores 'get' e 'set'",
			"codeActions.source.organizeImports.title": "Organizar Imports"
		},
		"dist/utils/api": {
			"invalidVersion": "Versão Inválida"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Configurar tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configurar jsconfig.json",
			"typescript.noTypeScriptProjectConfig": "O arquivo não é parte do projeto TypeScript. Clique [aqui]({0}) para mais informações.",
			"typescript.noJavaScriptProjectConfig": "O arquivo não é parte do projeto JavaScript. Clique [aqui]({0}) para mais informações.",
			"typescript.projectConfigNoWorkspace": "Favor abrir uma pasta no VS Code para usar um projeto TypeScript ou JavaScript",
			"typescript.projectConfigUnsupportedFile": "Não foi possível determinar o projeto TypeScript ou JavaScript. Tipo de arquivo não suportado",
			"typescript.projectConfigCouldNotGetInfo": "Não foi possível determinar o projeto TypeScript ou JavaScript"
		},
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Não foi possível determinar as referências"
		},
		"dist/languageFeatures/completions": {
			"selectCodeAction": "Selecione uma ação de código para aplicar",
			"acquiringTypingsLabel": "Acquiring typings...",
			"acquiringTypingsDetail": "Adquirindo definições de digitações para o Intellisense.",
			"autoImportLabel": "Importação automática de {0}"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Habilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-nocheck": "Desabilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-ignore": "Suprime erros de @ts-check na próxima linha de um arquivo.",
			"ts-expect-error": "Suprime erros de verificação de @ts-check na próxima linha de um arquivo, esperando que pelo menos um exista."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"oneImplementationLabel": "1 implementation",
			"manyImplementationLabel": "{0} implementations"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "JSDoc comment"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Organize Imports"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Reparar tudo no arquivo)"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Fix All",
			"autoFix.unused.label": "Remove all unused code",
			"autoFix.missingImports.label": "Adicionar todas as importações ausentes"
		},
		"dist/languageFeatures/refactor": {
			"refactoringFailed": "Não pode aplicar a refatoração",
			"extractConstant.disabled.title": "Extract to constant",
			"extractConstant.disabled.reason": "A seleção atual não pode ser extraída",
			"extractFunction.disabled.title": "Extract to function",
			"extractFunction.disabled.reason": "A seleção atual não pode ser extraída",
			"refactor.documentation.title": "Saiba mais sobre refatoramentos JS/TS"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"oneReferenceLabel": "1 reference",
			"manyReferenceLabel": "{0} references"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Ocorreu um erro ao renomear o arquivo"
		},
		"dist/tsServer/versionStatus": {
			"projectQuickPick.placeholder": "TypeScript Project Info",
			"projectQuickPick.version.label": "Select TypeScript Version...",
			"projectQuickPick.project.create": "Create tsconfig",
			"projectQuickPick.project.create.description": "Este arquivo não faz parte de um projeto tsconfig/jsconfig",
			"projectQuickPick.version.goProjectConfig": "Open tsconfig",
			"projectQuickPick.help": "TypeScript help",
			"projectInfo.name": "TypeScript: Project Info"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.",
			"serverExitedWithError": "Servidor de linguagem TypeScript encerrado com erro. A mensagem de erro é: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "Logging de TS Server está desligado. Por favor configure 'typescript.tsserver.log' e reinicie o  TS Server para habilitar o log",
			"typescript.openTsServerLog.enableAndReloadOption": "Habilitar logging e reniciar TS server",
			"typescript.openTsServerLog.noLogFile": "O TS Server não iniciou o logging.",
			"openTsServerLog.openFileFailedFailed": "Não foi possível abrir o arquivo de log do TS Server",
			"serverDiedReportIssue": "Informar problema",
			"serverDiedAfterStart": "O serviço de linguagem TypeScript morreu 5 vezes depois que começou. O serviço não será reiniciado.",
			"serverDied": "O serviço TypeScript morreu inesperadamente 5 vezes nos últimos 5 minutos.",
			"serverDiedOnce": "O serviço de linguagem TypeScript morreu inesperadamente.",
			"serverLoading.progress": "Inicializando os recursos da linguagem JS/TS"
		},
		"dist/tsServer/versionManager": {
			"selectTsVersion": "Selecione a versão do TypeScript usada para os recursos de linguagem JavaScript e TypeScript",
			"useVSCodeVersionOption": "Use a versão do VS Code",
			"useWorkspaceVersionOption": "Use Workspace Version",
			"allow": "Allow",
			"dismiss": "Dismiss",
			"suppress prompt": "Never in this Workspace",
			"promptUseWorkspaceTsdk": "This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?",
			"learnMore": "Saiba mais sobre o gerenciamento de versões do TypeScript"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Buscando dados para melhor IntelliSense do TypeScript",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Não mostrar novamente",
			"typesInstallerInitializationFailed.title": "Não foi possível instalar os arquivos de tipagem para recursos da linguagem JavaScript. Por favor, certifique-se que o NPM está instalado ou configure 'typescript.npm' em suas configurações de usuário. Clique [aqui]({0}) para mais informações."
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript: Configurar Exclusões",
			"hintExclude": "Para habilitar os recursos de linguagem JavaScript/TypeScipt em todo o projeto, excluir pastas com muitos arquivos, como: {0}",
			"hintExclude.generic": "Para habilitar os recursos de linguagem JavaScript/TypeScipt em todo o projeto, excluir pastas grandes com arquivos em que você não trabalha.",
			"large.label": "Configurar exclusões",
			"hintExclude.tooltip": "Para habilitar os recursos de linguagem JavaScript/TypeScipt em todo o projeto, excluir pastas grandes com arquivos em que você não trabalha."
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"renameProgress.title": "Verificando a atualização das importações JS/TS",
			"prompt": "Atualizar as importações para '{0}'?",
			"promptMoreThanOne": "Atualizar as importações para os seguintes arquivos {0}?",
			"reject.title": "No",
			"accept.title": "Yes",
			"always.title": "Sempre atualizar os imports automaticamente",
			"never.title": "Nunca atualizar imports automaticamente",
			"moreFile": "... 1 arquivo adicional não está mostrado",
			"moreFiles": "... {0} arquivos adicionais não estão mostrados"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "O caminho {0} não aponta para uma instalação de tsserver válida. Voltando para a versão do TypeScript empacotada."
		},
		"dist/task/taskProvider": {
			"badTsConfig": "A tarefa TypeScript em tasks.json contém \"\\\\\". Tarefas TypeScript tsconfig devem usar \"/\"",
			"buildTscLabel": "build - {0}",
			"buildAndWatchTscLabel": "watch - {0}"
		}
	}
}