{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Recursos de Linguagem TypeScript e JavaScript",
			"description": "Fornece suporte de linguagem avançada para JavaScript e TypeScript.",
			"reloadProjects.title": "Recarregar Projeto",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Concluir funções com assinaturas de parâmetro.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Exige TS 3.7 ou posterior e as verificações de nulo estrito devem ser habilitadas.",
			"typescript.tsdk.desc": "Especifica o caminho da pasta para os arquivos tsserver e lib*.d.ts em uma instalação do TypeScript a ser usada para IntelliSense, por exemplo: `./node_modules/typescript/lib`.\r\n\r\n– Quando especificado como uma configuração de usuário, a versão do TypeScript de `typescript.tsdk` substitui automaticamente a versão interna do TypeScript.\r\n– Quando especificado como uma configuração de workspace, `typescript.tsdk` permite mudar para o uso da versão do workspace do TypeScript para IntelliSense com o comando `TypeScript: Select TypeScript version`.\r\n\r\nConfira a [documentação do TypeScript] (https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) para obter mais detalhes sobre o gerenciamento de versões do TypeScript.",
			"typescript.disableAutomaticTypeAcquisition": "Desabilita a aquisição automática de tipo. A aquisição automática de tipo busca pacotes `@types` do npm para aprimorar o IntelliSense para bibliotecas externas.",
			"typescript.enablePromptUseWorkspaceTsdk": "Permite solicitar que os usuários usem a versão do TypeScript configurada no workspace para IntelliSense.",
			"typescript.tsserver.log": "Habilita o registro em log do TS Server em um arquivo. Esse log pode ser usado para diagnosticar problemas do TS Server. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.tsserver.pluginPaths": "Caminhos adicionais para descobrir os plugins do Serviço de Linguagem TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Um caminho absoluto ou relativo. O caminho relativo será resolvido nas pastas do workspace.",
			"typescript.tsserver.trace": "Habilita o rastreamento de mensagens enviadas para o TS Server. Esse rastreamento pode ser usado para diagnosticar problemas do TS Server. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.validate.enable": "Habilitar/desabilitar a validação do TypeScript.",
			"typescript.format.enable": "Habilitar/desabilitar o formatador do TypeScript padrão.",
			"javascript.format.enable": "Habilitar/desabilitar o formatador padrão do JavaScript.",
			"format.insertSpaceAfterCommaDelimiter": "Define o tratamento de espaço após um delimitador de vírgula.",
			"format.insertSpaceAfterConstructor": "Define o tratamento de espaço após a palavra-chave do construtor.",
			"format.insertSpaceAfterSemicolonInForStatements": "Define o tratamento de espaço após um ponto e vírgula em uma instrução for.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Define o tratamento de espaço após um operador binário.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Define o tratamento de espaço após a palavra-chave de função para funções anônimas.",
			"format.insertSpaceBeforeFunctionParenthesis": "Define o tratamento de espaço antes dos parênteses do argumento de função.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.",
			"format.insertSpaceAfterTypeAssertion": "Define o tratamento de espaços após declarações de tipo no TypeScript.",
			"format.placeOpenBraceOnNewLineForFunctions": "Define se uma chave de abertura é colocada em uma nova linha para funções.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.",
			"format.semicolons": "Define o processamento de ponto e vírgula opcional. Exige o uso do TypeScript 3.7 ou mais recente no workspace.",
			"format.semicolons.ignore": "Não inserir nem remover pontos e vírgulas.",
			"format.semicolons.insert": "Inserir pontos e vírgulas nos finais da instrução.",
			"format.semicolons.remove": "Remover sinais de ponto e vírgula desnecessários.",
			"javascript.validate.enable": "Habilitar/desabilitar a validação do JavaScript.",
			"goToProjectConfig.title": "Ir para Configuração do Projeto",
			"javascript.referencesCodeLens.enabled": "Habilitar/desabilitar CodeLens de referências em arquivos JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos JavaScript.",
			"typescript.referencesCodeLens.enabled": "Habilitar/desabilitar CodeLens de referências em arquivos TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos TypeScript.",
			"typescript.implementationsCodeLens.enabled": "Habilitar/desabilitar CodeLens de implementações. Este CodeLens mostra os implementadores de uma interface.",
			"typescript.openTsServerLog.title": "Abrir o log do TS Server",
			"typescript.restartTsServer": "Reiniciar TS Server",
			"typescript.selectTypeScriptVersion.title": "Selecionar a Versão do TypeScript...",
			"typescript.reportStyleChecksAsWarnings": "Relatar verificações de estilo como avisos.",
			"javascript.implicitProjectConfig.checkJs": "Habilitar/desabilitar verificação semântica de arquivos JavaScript. Os arquivos existentes de jsconfig.json ou tsconfig.json substituem essa configuração.",
			"typescript.npm": "Especifica o caminho para o executável do npm usado para Aquisição Automática de Tipo.",
			"typescript.check.npmIsInstalled": "Verificar se o npm está instalado para Aquisição Automática de Tipo.",
			"configuration.suggest.names": "Habilitar/desabilitar incluindo nomes exclusivos do arquivo em sugestões do JavaScript. Observe que as sugestões de nome sempre são desabilitadas no código do JavaScript que é verificado semanticamente usando `@ts-check` ou `checkJs`.",
			"typescript.tsc.autoDetect": "Controla a detecção automática de tarefas tsc.",
			"typescript.tsc.autoDetect.off": "Desabilitar este recurso.",
			"typescript.tsc.autoDetect.on": "Criar tarefas de build e de inspeção.",
			"typescript.tsc.autoDetect.build": "Criar apenas tarefas de compilação de execução única.",
			"typescript.tsc.autoDetect.watch": "Criar apenas tarefas de compilação e inspeção.",
			"typescript.problemMatchers.tsc.label": "Problemas do TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemas do TypeScript (modo de inspeção)",
			"configuration.suggest.paths": "Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.",
			"configuration.tsserver.useSeparateSyntaxServer": "Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente às operações relacionadas à sintaxe, como calcular a dobragem ou computar os símbolos de documentos. Exige o uso de TypeScript 3.4.0 ou mais recente no workspace.",
			"configuration.tsserver.maxTsServerMemory": "Definir a quantidade máxima de memória (em MB) a ser alocada para o processo do servidor do TypeScript",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimental) Habilita o relatório de erros amplo do projeto.",
			"typescript.locale": "Define a localidade usada para relatar erros de JavaScript e TypeScript. O valor padrão `null` usa a localidade do VS Code.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Habilitar/desabilitar `experimentalDecorators` para arquivos JavaScript que não fazem parte de um projeto. Os arquivos jsconfig.json ou tsconfig.json existentes substituem esta configuração.",
			"configuration.suggest.autoImports": "Habilitar/desabilitar sugestões de importação automática.",
			"taskDefinition.tsconfig.description": "O arquivo tsconfig que define o build do TS.",
			"javascript.suggestionActions.enabled": "Habilitar/desabilitar o diagnóstico de sugestão para arquivos JavaScript no editor.",
			"typescript.suggestionActions.enabled": "Habilitar/desabilitar diagnóstico de sugestão para arquivos TypeScript no editor.",
			"typescript.preferences.quoteStyle": "Estilo preferido de aspas para uso em correções rápidas: `single` para aspas simples, `double` para aspas duplas ou `auto` para inferir o tipo de aspas de importações existentes.",
			"typescript.preferences.importModuleSpecifier": "Estilo de caminho preferencial para importações automáticas.",
			"typescript.preferences.importModuleSpecifier.auto": "Selecionar automaticamente o estilo do caminho de importação. Prefere usar uma importação relativa se `baseUrl` está configurado e o caminho relativo tem menos segmentos do que a importação não relativa.",
			"typescript.preferences.importModuleSpecifier.relative": "Relativo à localização do arquivo.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Com base no `baseUrl` configurado em seu `jsconfig.json`/`tsconfig.json`.",
			"typescript.preferences.importModuleSpecifierEnding": "Terminação de caminho preferencial para importações automáticas.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Usar as configurações do projeto para selecionar um padrão.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Encurtar `./component/index.js` para `./component`.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Encurtar `./component/index.js` para `./component/index`.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Não encurtar as terminações de caminho. Incluir a extensão `.js`.",
			"typescript.preferences.includePackageJsonAutoImports": "Habilitar/desabilitar a pesquisa de dependências `package.json` para importações automáticas disponíveis.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Pesquisar dependências com base no impacto de desempenho estimado.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Sempre pesquisar dependências.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nunca pesquisar dependências.",
			"typescript.updateImportsOnFileMove.enabled": "Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Avisar em cada renomeação.",
			"typescript.updateImportsOnFileMove.enabled.always": "Sempre atualizar caminhos automaticamente.",
			"typescript.updateImportsOnFileMove.enabled.never": "Nunca renomear caminhos e não avisar.",
			"typescript.autoClosingTags": "Habilitar/desabilitar o fechamento automático de marcas JSX.",
			"typescript.suggest.enabled": "Habilitar/desabilitar sugestões de preenchimento automático.",
			"configuration.surveys.enabled": "Habilitar/desabilitar pesquisas ocasionais que nos ajudam a melhorar o suporte a JavaScript e TypeScript do VS Code.",
			"configuration.suggest.completeJSDocs": "Habilitar/desabilitar sugestão para concluir comentários JSDoc.",
			"configuration.tsserver.watchOptions": "Configurar as estratégias de monitoramento que devem ser usadas para manter o controle de arquivos e diretórios. Exige o uso de TypeScript 3.8 ou posterior no workspace.",
			"configuration.tsserver.watchOptions.watchFile": "Estratégia para como os arquivos individuais são observados.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Verificar todos os arquivos várias vezes por segundo a um intervalo fixo para ver se há alterações.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Verificar todos os arquivos várias vezes por segundo para ver se há alterações, mas usar heurística para verificar determinados tipos de arquivos com uma frequência inferior à dos outros.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Usar uma fila dinâmica na qual os arquivos modificados menos frequentemente serão verificados com uma frequência menor.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Tente usar os eventos nativos do sistema operacional/sistema de arquivos para alterações de arquivo.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Tentar usar os eventos nativos do sistema operacional/sistema de arquivos para escutar alterações nos diretórios de um arquivo. Isso pode usar menos observadores de arquivo, mas pode ser menos preciso.",
			"configuration.tsserver.watchOptions.watchDirectory": "Estratégia para como árvores de diretório inteiras são observadas em sistemas que não têm funcionalidade recursiva de observação de arquivo.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Verificar se há alterações em todos os diretórios várias vezes por segundo em um intervalo fixo.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Usar uma fila dinâmica na qual os diretórios modificados com menos frequência serão verificados com menos frequência.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Tente usar o sistema operacional/eventos nativos do sistema de arquivos para alterações de diretório.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Ao usar eventos do sistema de arquivos, esta opção especifica a estratégia de sondagem que é usada quando o sistema fica sem observadores de arquivo nativos e/ou não dá suporte a observadores de arquivo nativos.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Verificar todos os arquivos várias vezes por segundo a um intervalo fixo para ver se há alterações.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Verificar todos os arquivos várias vezes por segundo para ver se há alterações, mas usar heurística para verificar determinados tipos de arquivos com uma frequência inferior à dos outros.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Usar uma fila dinâmica na qual os arquivos modificados menos frequentemente serão verificados com uma frequência menor.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Desabilitar a observação adiada nos diretórios. A observação adiada é útil quando muitas alterações de arquivo podem ocorrer ao mesmo tempo (por exemplo, uma alteração em node_modules por causa da execução da instalação do npm), mas você pode desabilitá-la com esse sinalizador para algumas configurações menos comuns.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'",
			"typescript.preferences.useAliasesForRenames": "Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.",
			"typescript.workspaceSymbols.scope": "Controla quais arquivos são pesquisados por [ir para o símbolo no workspace] (https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Pesquisar todos os projetos abertos do JavaScript ou TypeScript para símbolos. Exige o uso do TypeScript 3.9 ou mais recente no workspace.",
			"typescript.workspaceSymbols.scope.currentProject": "Somente pesquisar símbolos no projeto JavaScript ou TypeScript atual.",
			"codeActions.refactor.extract.constant.title": "Extrair constante",
			"codeActions.refactor.extract.constant.description": "Extrair expressão para constante.",
			"codeActions.refactor.extract.function.title": "Extrair função",
			"codeActions.refactor.extract.function.description": "Extrair expressão para o método ou a função.",
			"codeActions.refactor.extract.type.title": "Extrair tipo",
			"codeActions.refactor.extract.type.description": "Extrair tipo para um alias de tipo.",
			"codeActions.refactor.extract.interface.title": "Extrair interface",
			"codeActions.refactor.extract.interface.description": "Extrair tipo para uma interface.",
			"codeActions.refactor.rewrite.import.title": "Converter importação",
			"codeActions.refactor.rewrite.import.description": "Converter entre importações nomeadas e importações de namespace.",
			"codeActions.refactor.rewrite.export.title": "Converter exportação",
			"codeActions.refactor.rewrite.export.description": "Converter entre exportação padrão e exportação nomeada.",
			"codeActions.refactor.move.newFile.title": "Mover para um novo arquivo",
			"codeActions.refactor.move.newFile.description": "Mover a expressão para um novo arquivo.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Regravar chaves de seta",
			"codeActions.refactor.rewrite.arrow.braces.description": "Adicionar ou remover chaves em uma função de seta.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Converter parâmetros para objeto não estruturado",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Gerar acessadores",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Gerar acessadores 'get' e 'set'",
			"codeActions.source.organizeImports.title": "Organizar importações"
		},
		"dist/utils/api": {
			"invalidVersion": "versão inválida"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Configurar tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configurar jsconfig.json",
			"typescript.noTypeScriptProjectConfig": "O arquivo não faz parte de um projeto do TypeScript. Clique [aqui]({0}) para saber mais.",
			"typescript.noJavaScriptProjectConfig": "O arquivo não faz parte de um projeto do JavaScript. Clique [aqui]({0}) para saber mais.",
			"typescript.projectConfigNoWorkspace": "Abra uma pasta no VS Code para usar um projeto do TypeScript ou JavaScript",
			"typescript.projectConfigUnsupportedFile": "Não foi possível determinar o projeto do TypeScript ou JavaScript. Tipo de arquivo sem suporte",
			"typescript.projectConfigCouldNotGetInfo": "Não foi possível determinar o projeto do TypeScript ou JavaScript"
		},
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Não foi possível determinar as referências"
		},
		"dist/languageFeatures/completions": {
			"selectCodeAction": "Selecione uma ação de código para aplicar",
			"acquiringTypingsLabel": "Adquirindo digitações...",
			"acquiringTypingsDetail": "Adquirindo definições de digitações para o Intellisense.",
			"autoImportLabel": "Importação automática de {0}"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Habilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-nocheck": "Desabilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-ignore": "Suprime erros de @ts-check na próxima linha de um arquivo.",
			"ts-expect-error": "Suprime erros de verificação de @ts-check na próxima linha de um arquivo, esperando que pelo menos um exista."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"oneImplementationLabel": "Uma implementação",
			"manyImplementationLabel": "{0} implementações"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Comentário do JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Organizar as Importações"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Reparar tudo no arquivo)"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Corrigir Tudo",
			"autoFix.unused.label": "Remover todo o código não usado",
			"autoFix.missingImports.label": "Adicionar todas as importações ausentes"
		},
		"dist/languageFeatures/refactor": {
			"refactoringFailed": "Não pode aplicar a refatoração",
			"extractConstant.disabled.title": "Extrair para constante",
			"extractConstant.disabled.reason": "A seleção atual não pode ser extraída",
			"extractFunction.disabled.title": "Extrair para função",
			"extractFunction.disabled.reason": "A seleção atual não pode ser extraída",
			"refactor.documentation.title": "Saiba mais sobre refatoramentos JS/TS"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"oneReferenceLabel": "Uma referência",
			"manyReferenceLabel": "{0} referências"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Ocorreu um erro ao renomear o arquivo"
		},
		"dist/tsServer/versionStatus": {
			"projectQuickPick.placeholder": "Informações do Projeto do TypeScript",
			"projectQuickPick.version.label": "Selecionar a Versão do TypeScript...",
			"projectQuickPick.project.create": "Criar tsconfig",
			"projectQuickPick.project.create.description": "Este arquivo não faz parte de um projeto tsconfig/jsconfig",
			"projectQuickPick.version.goProjectConfig": "Abrir tsconfig",
			"projectQuickPick.help": "Ajuda do TypeScript",
			"projectInfo.name": "TypeScript: Informações do Projeto"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "O caminho {0} não aponta para uma instalação tsserver válida. Voltando para a versão do TypeScript em pacote.",
			"serverExitedWithError": "O servidor de linguagem TypeScript foi encerrado com o erro. A mensagem de erro é: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "O registro em log do Servidor TS está desativado. Defina `typescript.tsserver.log` e reinicie o servidor TS para habilitar o registro em log",
			"typescript.openTsServerLog.enableAndReloadOption": "Habilitar o registro em log e reiniciar o TS Server",
			"typescript.openTsServerLog.noLogFile": "O TS Server não iniciou o registro em log.",
			"openTsServerLog.openFileFailedFailed": "Não foi possível abrir o arquivo de log do TS Server",
			"serverDiedReportIssue": "Relatar Problema",
			"serverDiedAfterStart": "O serviço de linguagem TypeScript foi encerrado cinco vezes após começar. O serviço não será reiniciado.",
			"serverDied": "O serviço de linguagem TypeScript foi encerrado inesperadamente cinco vezes nos últimos cinco minutos.",
			"serverDiedOnce": "O serviço de linguagem TypeScript foi encerrado inesperadamente.",
			"serverLoading.progress": "Inicializando recursos de linguagem do JS/TS"
		},
		"dist/tsServer/versionManager": {
			"selectTsVersion": "Selecione a versão do TypeScript usada para os recursos de linguagem JavaScript e TypeScript",
			"useVSCodeVersionOption": "Use a versão do VS Code",
			"useWorkspaceVersionOption": "Usar Versão do Workspace",
			"allow": "Permitir",
			"dismiss": "Ignorar",
			"suppress prompt": "Nunca neste Workspace",
			"promptUseWorkspaceTsdk": "Este workspace contém uma versão do TypeScript. Deseja usar a versão do TypeScript do workspace para recursos de linguagem TypeScript e JavaScript?",
			"learnMore": "Saiba mais sobre o gerenciamento de versões do TypeScript"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Buscando dados para melhor o IntelliSense para TypeScript",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Não Mostrar Novamente",
			"typesInstallerInitializationFailed.title": "Não foi possível instalar os arquivos de digitação para recursos de linguagem JavaScript. Verifique se o NPM está instalado ou configure 'typescript.npm' nas configurações de usuário. Clique [aqui]({0}) para saber mais."
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript: Configurar Exclusões",
			"hintExclude": "Para habilitar recursos de linguagem JavaScript/TypeScript em todo o projeto, exclua pastas com muitos arquivos, como: {0}",
			"hintExclude.generic": "Para habilitar os recursos de linguagem JavaScript/TypeScript em todo o projeto, exclua pastas grandes com arquivos de origem nos quais você não trabalha.",
			"large.label": "Configurar Exclusões",
			"hintExclude.tooltip": "Para habilitar os recursos de linguagem JavaScript/TypeScript em todo o projeto, exclua pastas grandes com arquivos de origem nos quais você não trabalha."
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"renameProgress.title": "Verificando a atualização das importações JS/TS",
			"prompt": "Atualizar as importações para '{0}'?",
			"promptMoreThanOne": "Atualizar as importações para os seguintes arquivos {0}?",
			"reject.title": "Não",
			"accept.title": "Sim",
			"always.title": "Sempre atualizar os imports automaticamente",
			"never.title": "Nunca atualizar imports automaticamente",
			"moreFile": "... 1 arquivo adicional não está mostrado",
			"moreFiles": "... {0} arquivos adicionais não estão mostrados"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "O caminho {0} não aponta para uma instalação de tsserver válida. Voltando para a versão do TypeScript empacotada."
		},
		"dist/task/taskProvider": {
			"badTsConfig": "A tarefa TypeScript em tasks.json contém \"\\\\\". Tarefas TypeScript tsconfig devem usar \"/\"",
			"buildTscLabel": "compilar – {0}",
			"buildAndWatchTscLabel": "monitorar – {0}"
		}
	}
}