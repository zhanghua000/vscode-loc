{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Fonctionnalités de langage TypeScript et JavaScript",
			"description": "Fournit une prise en charge riche de langage pour JavaScript et TypeScript.",
			"reloadProjects.title": "Recharger le projet",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Fonctions complètes avec leur signature de paramètre.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Activez/désactivez l'affichage des complétions sur des valeurs potentiellement indéfinies qui insèrent un appel de chaîne facultatif. Nécessite TS 3.7+ et l'activation des vérifications de valeur null stricte.",
			"typescript.tsdk.desc": "Spécifie le chemin de dossier des fichiers tsserver et lib*.d.ts dans une installation de TypeScript à utiliser pour IntelliSense. Exemple : './node_modules/typescript/lib'.\r\n\r\n- Si elle est spécifiée sous forme de paramètre utilisateur, la version de TypeScript dans 'typescript.tsdk' remplace automatiquement la version de TypeScript intégrée.\r\n- S'il est spécifié sous forme de paramètre d'espace de travail, 'typescript.tsdk' vous permet d'utiliser cette version d'espace de travail de TypeScript pour IntelliSense avec la commande 'TypeScript: Select TypeScript version'.\r\n\r\nConsultez la [documentation de TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) pour plus d'informations sur la gestion des versions de TypeScript.",
			"typescript.disableAutomaticTypeAcquisition": "Désactive l'acquisition de type automatique. L'acquisition de type automatique récupère les packages '@types' de npm afin d'améliorer IntelliSense pour les bibliothèques externes.",
			"typescript.enablePromptUseWorkspaceTsdk": "Permet d'inviter les utilisateurs à se servir de la version TypeScript configurée dans l'espace de travail pour IntelliSense.",
			"typescript.tsserver.enableTracing": "Active le traçage des performances du serveur TS dans un répertoire. Ces fichiers de trace permettent de diagnostiquer les problèmes de performances du serveur TS. Le journal peut contenir des chemins de fichiers, du code source et d'autres informations potentiellement sensibles de votre projet.",
			"typescript.tsserver.log": "Active la journalisation du serveur TS dans un fichier. Ce journal peut être utilisé pour diagnostiquer les problèmes du serveur TS. Il peut contenir des chemins de fichier, du code source et d'autres informations potentiellement sensibles de votre projet.",
			"typescript.tsserver.pluginPaths": "Chemins supplémentaires pour découvrir les plug-ins Service de langage Typescript.",
			"typescript.tsserver.pluginPaths.item": "Un chemin absolu ou un chemin relatif. Le chemin d’accès relatif sera résolu en fonction des dossiers de l’espace de travail.",
			"typescript.tsserver.trace": "Active le traçage des messages envoyés au serveur TS. Cette trace peut être utilisée pour diagnostiquer les problèmes du serveur TS. Elle peut contenir des chemins de fichier, du code source et d'autres informations potentiellement sensibles de votre projet.",
			"typescript.validate.enable": "Activez/désactivez la validation TypeScript.",
			"typescript.format.enable": "Activez/désactivez le formateur TypeScript par défaut.",
			"javascript.format.enable": "Activez/désactivez le formateur JavaScript par défaut.",
			"format.insertSpaceAfterCommaDelimiter": "Définit le traitement des espaces après une virgule de délimitation.",
			"format.insertSpaceAfterConstructor": "Définit le traitement des espaces après le mot clé du constructeur.",
			"format.insertSpaceAfterSemicolonInForStatements": " Définit le traitement des espaces après un point-virgule dans une instruction for.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Définit le traitement des espaces après un opérateur binaire.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Définit la gestion des espaces après les mots clés dans une instruction de flux de contrôle.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Définit le traitement des espaces après le mot clé function pour les fonctions anonymes.",
			"format.insertSpaceBeforeFunctionParenthesis": "Définit le traitement des espaces avant les parenthèses d'arguments de la fonction.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Définit l’espace après ouverture et avant la fermeture de parenthèses non vides.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Définit l’espace après ouverture et avant la fermeture de crochets non vides.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades non vides.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture d'accolades vides.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades de chaîne de modèle.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Définit le traitement des espaces après l'ouverture et avant la fermeture des accolades d'expression JSX.",
			"format.insertSpaceAfterTypeAssertion": "Définit le traitement des espaces après les assertions de type dans TypeScript.",
			"format.placeOpenBraceOnNewLineForFunctions": "Définit si une accolade ouvrante dans une fonction est placée ou non sur une nouvelle ligne.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Définit si une accolade ouvrante dans un bloc de contrôle est placée ou non sur une nouvelle ligne.",
			"format.semicolons": "Définit la gestion des points-virgules facultatifs. Nécessite l'utilisation de TypeScript 3.7 ou plus récent dans l'espace de travail.",
			"format.semicolons.ignore": "N'insérez ou n'enlevez aucun point-virgule.",
			"format.semicolons.insert": "Insérez des points-virgules à la fin des instructions.",
			"format.semicolons.remove": "Supprimez les points-virgules inutiles.",
			"javascript.validate.enable": "Activez/désactivez la validation JavaScript.",
			"goToProjectConfig.title": "Accéder à la configuration du projet",
			"javascript.referencesCodeLens.enabled": "Activez/désactivez les références CodeLens dans les fichiers JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Activez/désactivez les références CodeLens sur toutes les fonctions des fichiers JavaScript.",
			"typescript.referencesCodeLens.enabled": "Activez/désactivez les références CodeLens dans les fichiers TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Activez/désactivez les références CodeLens sur toutes les fonctions des fichiers TypeScript.",
			"typescript.implementationsCodeLens.enabled": "Activer/désactiver les implémentations CodeLens. Ce CodeLens affiche l'implémenteur d’une interface.",
			"typescript.openTsServerLog.title": "Ouvrir le journal du serveur TS",
			"typescript.restartTsServer": "Redémarrer le serveur TS",
			"typescript.selectTypeScriptVersion.title": "Sélectionner la version de TypeScript...",
			"typescript.reportStyleChecksAsWarnings": "Rapporter les vérifications de style en tant qu’avertissements.",
			"typescript.npm": "Spécifie le chemin de l'exécutable NPM utilisé pour l'acquisition de type automatique.",
			"typescript.check.npmIsInstalled": "Vérifie si NPM est installé pour l'acquisition de type automatique.",
			"configuration.suggest.names": "Activez/désactivez l'inclusion de noms uniques à partir du fichier dans les suggestions JavaScript. Notez que les suggestions de nom sont toujours désactivées dans le code JavaScript qui fait l'objet d'une vérification sémantique à l'aide de '@ts-check' ou 'checkJs'.",
			"typescript.tsc.autoDetect": "Contrôle la détection automatique des tâches tsc.",
			"typescript.tsc.autoDetect.off": "Désactivez cette fonctionnalité.",
			"typescript.tsc.autoDetect.on": "Créer les tâches build et watch.",
			"typescript.tsc.autoDetect.build": "Créer uniquement des tâches de compilation à exécution unique.",
			"typescript.tsc.autoDetect.watch": "Créer uniquement des tâches compile et watch.",
			"typescript.problemMatchers.tsc.label": "Problèmes liés à TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problèmes liés à TypeScript (mode espion)",
			"configuration.suggest.paths": "Activer/désactiver des suggestions pour les chemins dans les instructions d'import et les appels require.",
			"configuration.tsserver.useSeparateSyntaxServer": "Activez/désactivez la génération dynamique d'un serveur TypeScript distinct capable de répondre plus rapidement aux opérations de syntaxe, comme le calcul du pliage ou le calcul des symboles de document. Nécessite l'utilisation de TypeScript 3.4.0 ou supérieur dans l'espace de travail.",
			"configuration.tsserver.maxTsServerMemory": "Définir la quantité maximale de mémoire (en Mo) à allouer au processus du serveur TypeScript",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Expérimental) Permet de signaler les erreurs à l'échelle du projet.",
			"typescript.locale": "Définit les paramètres régionaux utilisé pour signaler les erreurs JavaScript et TypeScript. La valeur par défaut `null` utilise les paramètres régionaux de VS Code.",
			"configuration.implicitProjectConfig.checkJs": "Active/désactive la vérification sémantique des fichiers JavaScript. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.",
			"configuration.javascript.checkJs.checkJs.deprecation": "Ce paramètre est déprécié au profit de '#js/ts.implicitProjectConfig.checkJs#'.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Active/désactive 'experimentalDecorators' dans les fichiers JavaScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "Ce paramètre est déprécié au profit de '#js/ts.implicitProjectConfig.experimentalDecorators#'.",
			"configuration.implicitProjectConfig.strictNullChecks": "Active/désactive les [vérifications de valeur null strictes](https://www.typescriptlang.org/tsconfig#strictNullChecks) dans les fichiers JavaScript et TypeScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Active/désactive les [types de fonction stricts](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) dans les fichiers JavaScript et TypeScript qui ne font pas partie d'un projet. Les fichiers 'jsconfig.json' ou 'tsconfig.json existants remplacent ce paramètre.",
			"configuration.suggest.autoImports": "Active/désactive les suggestions d'importation automatique.",
			"taskDefinition.tsconfig.description": "Fichier tsconfig qui définit la build TS.",
			"javascript.suggestionActions.enabled": "Active/désactive les diagnostics de suggestion pour les fichiers JavaScript dans l'éditeur.",
			"typescript.suggestionActions.enabled": "Active/désactive les diagnostics de suggestion pour les fichiers TypeScript dans l'éditeur.",
			"typescript.preferences.quoteStyle": "Style de guillemet par défaut à utiliser pour les corrections rapides : 'single' pour les guillemets simples, 'double' pour les guillemets doubles ou 'auto' pour déduire le type de guillemet à partir des importations existantes.",
			"typescript.preferences.importModuleSpecifier": "Style de chemin préféré pour les importations automatiques.",
			"typescript.preferences.importModuleSpecifier.shortest": "Préfère une importation non relative uniquement si celle-ci comporte moins de segments de chemin qu'une importation relative.",
			"typescript.preferences.importModuleSpecifier.relative": "Préfère un chemin relatif par rapport à l'emplacement du fichier importé.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Préfère une importation non relative basée sur le 'baseUrl' ou les 'paths' configurés dans votre 'jsconfig.json' / 'tsconfig.json'.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Préfère une importation non relative uniquement si le chemin d'importation relatif omet le répertoire du package ou du projet. Nécessite l'utilisation de TypeScript 4.2+ dans l'espace de travail.",
			"typescript.preferences.importModuleSpecifierEnding": "Fin de chemin par défaut des importations automatiques.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Utilisez les paramètres de projet pour sélectionner une valeur par défaut.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Raccourcissez './component/index.js' en './component'.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Raccourcissez './component/index.js' en './component/index'.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Ne pas raccourcir les terminaisons de chemin; inclure l’extension '.js'.",
			"typescript.preferences.includePackageJsonAutoImports": "Activer/désactiver la recherche dans les dépendances 'package.json' pour les importations automatiques disponibles.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Rechercher dans les dépendances en fonction de l'impact estimé des performances.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Toujours rechercher dans les dépendances.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Ne jamais rechercher dans les dépendances.",
			"typescript.updateImportsOnFileMove.enabled": "Active/désactive la mise à jour automatique des chemins d’importation quand vous renommez ou déplacez un fichier dans VS Code.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Demander à chaque renommage.",
			"typescript.updateImportsOnFileMove.enabled.always": "Toujours mettre à jour les chemins automatiquement.",
			"typescript.updateImportsOnFileMove.enabled.never": "Ne jamais renommer les chemins et ne pas demander.",
			"typescript.autoClosingTags": "Active/désactive la fermeture automatique des balises JSX.",
			"typescript.suggest.enabled": "Activer/désactiver les suggestions d'autocomplétion.",
			"configuration.surveys.enabled": "Activer/désactiver des enquêtes ponctuelles qui nous aident à améliorer le support JavaScript et TypeScript de VS Code.",
			"configuration.suggest.completeJSDocs": "Activez/désactivez la suggestion pour commenter JSDoc.",
			"configuration.tsserver.watchOptions": "Configurez les stratégies de surveillance qui doivent être utilisées pour effectuer le suivi des fichiers et répertoires. Nécessite l'utilisation de TypeScript 3.8+ dans l'espace de travail.",
			"configuration.tsserver.watchOptions.watchFile": "Stratégie de surveillance des fichiers individuels.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Recherchez les changements dans chaque fichier plusieurs fois par seconde à intervalle fixe.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Recherchez les changements dans chaque fichier plusieurs fois par seconde, mais utilisez une méthode heuristique pour vérifier certains types de fichiers moins souvent que d'autres.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Utilisez une file d'attente dynamique où les fichiers modifiés moins souvent sont vérifiés moins souvent.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Essayez d'utiliser les événements natifs du système d'exploitation/système de fichiers pour les changements de fichier.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Essayez d'utiliser les événements natifs du système d'exploitation/système de fichiers pour écouter les changements des répertoires qui contiennent un fichier. Peut utiliser moins d'observateurs de fichiers, mais risque d'être moins précis.",
			"configuration.tsserver.watchOptions.watchDirectory": "Stratégie de surveillance d'arborescences de répertoires complètes sous des systèmes sans fonctionnalité de surveillance récursive des fichiers.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Recherchez les changements dans chaque répertoire plusieurs fois par seconde à intervalle fixe.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Utilisez une file d'attente dynamique où les répertoires modifiés moins souvent sont vérifiés moins souvent.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Essayez d'utiliser les événements natifs du système d'exploitation/système de fichiers pour les changements de répertoire.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Quand vous utilisez des événements de système de fichiers, cette option spécifie la stratégie de sondage qui est utilisée quand le système n'a plus d'observateurs de fichiers natifs et/ou ne prend pas en charge les observateurs de fichiers natifs.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Recherchez les changements dans chaque fichier plusieurs fois par seconde à intervalle fixe.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Recherchez les changements dans chaque fichier plusieurs fois par seconde, mais utilisez la méthode heuristique pour vérifier certains types de fichier moins souvent que d'autres.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Utilisez une file d'attente dynamique où les fichiers modifiés moins souvent sont vérifiés moins souvent.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Désactivez la surveillance différée sur les répertoires. La surveillance différée est utile quand de nombreux changements de fichier sont susceptibles de se produire en même temps (par ex., un changement dans node_modules lié à l'exécution de npm install), mais vous pouvez aussi la désactiver avec cet indicateur pour des configurations moins courantes.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Le paramètre 'typescript.preferences.renameShorthandProperties' a été déprécié au profit de 'typescript.preferences.useAliasesForRenames'",
			"typescript.preferences.useAliasesForRenames": "Activez/désactivez l'introduction d'alias pour les propriétés de raccourci d'objet durant les renommages. Nécessite l'utilisation de TypeScript 3.4 (ou version ultérieure) dans l'espace de travail.",
			"typescript.workspaceSymbols.scope": "Détermine quels sont les fichiers recherchés par [atteindre le symbole dans l'espace de travail](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Recherche des symboles dans tous les projets JavaScript ou TypeScript ouverts. Nécessite l'utilisation de TypeScript 3.9 (ou version ultérieure) dans l'espace de travail.",
			"typescript.workspaceSymbols.scope.currentProject": "Recherche uniquement les symboles dans le projet JavaScript ou TypeScript actif.",
			"codeActions.refactor.extract.constant.title": "Extraire la constante",
			"codeActions.refactor.extract.constant.description": "Extrayez l'expression vers une constante.",
			"codeActions.refactor.extract.function.title": "Extraire la fonction",
			"codeActions.refactor.extract.function.description": "Extrayez l'expression vers une méthode ou une fonction.",
			"codeActions.refactor.extract.type.title": "Extraire le type",
			"codeActions.refactor.extract.type.description": "Extrayez le type vers un alias de type.",
			"codeActions.refactor.extract.interface.title": "Extraire l'interface",
			"codeActions.refactor.extract.interface.description": "Extraire le type vers une interface.",
			"codeActions.refactor.rewrite.import.title": "Convertir l'importation",
			"codeActions.refactor.rewrite.import.description": "Convertissez les importations nommées en importations d'espace de noms, et vice versa.",
			"codeActions.refactor.rewrite.export.title": "Convertir l'exportation",
			"codeActions.refactor.rewrite.export.description": "Convertissez l'exportation par défaut en exportation nommée, et vice versa.",
			"codeActions.refactor.move.newFile.title": "Déplacer vers un nouveau fichier",
			"codeActions.refactor.move.newFile.description": "Déplacez l'expression dans un nouveau fichier.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Réécrire les accolades arrow",
			"codeActions.refactor.rewrite.arrow.braces.description": "Ajoutez ou supprimez des accolades dans une fonction arrow.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Convertir les paramètres en objet déstructuré",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Générer des accesseurs",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Générer les accesseurs 'get' et 'set'",
			"codeActions.source.organizeImports.title": "Organiser les importations"
		},
		"dist/utils/api": {
			"invalidVersion": "La version n'est pas valide"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Configurer tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configurer jsconfig.json",
			"typescript.noTypeScriptProjectConfig": "Le fichier ne fait pas partie d'un projet TypeScript. Cliquer [ici]({0}) pour en savoir plus.",
			"typescript.noJavaScriptProjectConfig": "Le fichier ne fait pas partie d'un projet JavaScript. Cliquer [ici]({0}) pour en savoir plus.",
			"typescript.projectConfigNoWorkspace": "Ouvrez un dossier dans VS Code pour utiliser un projet TypeScript ou JavaScript",
			"typescript.projectConfigUnsupportedFile": "Impossible de déterminer le projet TypeScript ou JavaScript. Type de fichier non pris en charge",
			"typescript.projectConfigCouldNotGetInfo": "Impossible de déterminer le projet TypeScript ou JavaScript"
		},
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Impossible de déterminer les références"
		},
		"dist/languageFeatures/completions": {
			"selectCodeAction": "Sélectionner l'action de code à appliquer",
			"acquiringTypingsLabel": "Acquisition des typings...",
			"acquiringTypingsDetail": "Acquisition des définitions typings pour IntelliSense.",
			"autoImportLabel": "Importation automatique depuis {0}"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Active la vérification sémantique dans un fichier JavaScript. Doit se trouver au début d'un fichier.",
			"ts-nocheck": "Désactive la vérification sémantique dans un fichier JavaScript. Doit se trouver au début d'un fichier.",
			"ts-ignore": "Supprime les erreurs @ts-check sur la ligne suivante d'un fichier.",
			"ts-expect-error": "Supprime les erreurs @ts-check sur la ligne suivante d'un fichier, en supposant qu'il y a au moins une erreur."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"oneImplementationLabel": "1 implémentation",
			"manyImplementationLabel": "{0} implémentations"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Commentaire JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Organiser les importations"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Corriger tout dans le fichier)"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Tout corriger",
			"autoFix.unused.label": "Supprimer tout code inutilisé",
			"autoFix.missingImports.label": "Ajouter toutes les importations manquantes"
		},
		"dist/languageFeatures/refactor": {
			"refactoringFailed": "Impossible d'appliquer la refactorisation",
			"extractConstant.disabled.title": "Extraire en constante",
			"extractConstant.disabled.reason": "Impossible d'extraire la sélection actuelle",
			"extractFunction.disabled.title": "Extraire en fonction",
			"extractFunction.disabled.reason": "Impossible d'extraire la sélection actuelle",
			"refactor.documentation.title": "En savoir plus sur les refactorisations JS/TS"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"oneReferenceLabel": "1 référence",
			"manyReferenceLabel": "{0} références"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Une erreur s'est produite pendant le renommage du fichier"
		},
		"dist/tsServer/versionStatus": {
			"projectQuickPick.placeholder": "Informations sur le projet TypeScript",
			"projectQuickPick.version.label": "Sélectionner la version de TypeScript...",
			"projectQuickPick.version.description": "[current = {0}]",
			"projectQuickPick.project.create": "Créer tsconfig",
			"projectQuickPick.project.create.description": "Ce fichier ne fait actuellement pas partie d'un projet tsconfig/jsconfig",
			"projectQuickPick.version.goProjectConfig": "Ouvrir tsconfig",
			"projectQuickPick.help": "Aide de TypeScript",
			"projectInfo.name": "TypeScript : Informations sur le projet"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Le chemin {0} ne pointe pas vers une installation tsserver valide. Utilisation par défaut de la version TypeScript groupée.",
			"serverExitedWithError": "Le serveur de langage TypeScript a rencontré une erreur. Le message d'erreur est : {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "La journalisation du serveur TS est désactivée. Définissez 'typescript.tsserver.log' et redémarrez le serveur TS pour activer la journalisation",
			"typescript.openTsServerLog.enableAndReloadOption": "Activer la journalisation et redémarrer le serveur TS",
			"typescript.openTsServerLog.noLogFile": "Le serveur TS n'a pas démarré la journalisation.",
			"openTsServerLog.openFileFailedFailed": "Impossible d'ouvrir le fichier journal du serveur TS",
			"serverDiedReportIssue": "Signaler un problème",
			"serverDiedAfterStart": "Le service de langage TypeScript s'est subitement arrêté 5 fois juste après avoir démarré. Il n'y aura pas d'autres redémarrages.",
			"serverDied": "Le service de langage TypeScript s'est subitement arrêté 5 fois au cours des 5 dernières minutes.",
			"serverDiedOnce": "Le service de langage TypeScript est mort de manière inattendue.",
			"serverLoading.progress": "Initialisation des fonctionnalités de langage JS/TS"
		},
		"dist/tsServer/versionManager": {
			"selectTsVersion": "Sélectionner la version TypeScript utilisée pour les fonctionnalités de langage JavaScript et TypeScript",
			"useVSCodeVersionOption": "Utiliser la version de VS Code",
			"useWorkspaceVersionOption": "Utiliser la version de l'espace de travail",
			"allow": "Autoriser",
			"dismiss": "Ignorer",
			"suppress prompt": "Jamais dans cet espace de travail",
			"promptUseWorkspaceTsdk": "Cet espace de travail contient une version TypeScript. Voulez-vous utiliser la version TypeScript de l'espace de travail pour les fonctionnalités de langage TypeScript et JavaScript ?",
			"learnMore": "En savoir plus sur la gestion des versions TypeScript"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Récupération (fetch) des données pour l'amélioration de TypeScript IntelliSense",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Ne plus afficher",
			"typesInstallerInitializationFailed.title": "Impossible d'installer des fichiers de typages pour les fonctionnalités de langage JavaScript. Vérifiez que NPM est installé ou configurez 'typescript.npm' dans vos paramètres utilisateur. Cliquer [ici]({0}) pour en savoir plus."
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript : configurer les exclusions",
			"hintExclude": "Pour activer les fonctionnalités de langage JavaScript/TypeScript à l'échelle du projet, excluez les dossiers contenant de nombreux fichiers, par exemple : {0}",
			"hintExclude.generic": "Pour activer les fonctionnalités de langage JavaScript/TypeScript à l'échelle du projet, excluez les dossiers volumineux contenant des fichiers sources inutilisés.",
			"large.label": "Configurer les exclusions",
			"hintExclude.tooltip": "Pour activer les fonctionnalités de langage JavaScript/TypeScript à l'échelle du projet, excluez les dossiers volumineux contenant des fichiers sources inutilisés."
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"renameProgress.title": "Recherche de mises à jour des importations JS/TS",
			"prompt": "Mettre à jour les importations de '{0}' ?",
			"promptMoreThanOne": "Mettre à jour les importations des fichiers {0} suivants ?",
			"reject.title": "Non",
			"accept.title": "Oui",
			"always.title": "Toujours mettre à jour automatiquement les importations",
			"never.title": "Ne jamais mettre à jour automatiquement les importations",
			"moreFile": "...1 fichier supplémentaire non affiché",
			"moreFiles": "...{0} fichiers supplémentaires non affichés"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "Le chemin {0} ne pointe pas vers une installation tsserver valide. Utilisation par défaut de la version TypeScript groupée."
		},
		"dist/task/taskProvider": {
			"badTsConfig": "La tâche Typescript dans tasks.json contient \"\\\\\". Les tâches Typescript tsconfig doivent utiliser \"/\"",
			"buildTscLabel": "build - {0}",
			"buildAndWatchTscLabel": "espion - {0}"
		}
	}
}