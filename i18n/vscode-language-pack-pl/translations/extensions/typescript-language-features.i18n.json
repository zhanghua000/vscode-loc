{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Funkcje języków TypeScript i JavaScript",
			"description": "Zapewnia bogatą obsługę języków JavaScript i TypeScript.",
			"reloadProjects.title": "Załaduj ponownie projekt",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Uzupełnij funkcje za pomocą ich sygnatury parametru.",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Włącz/wyłącz pokazywanie uzupełnień potencjalnie niezdefiniowanych wartości, które wstawiają opcjonalne wywołanie łańcucha. Wymaga języka TS 3.7 lub nowszego i włączenia ścisłych kontroli wartości null.",
			"typescript.tsdk.desc": "Określa ścieżkę folderu do plików tsserver i lib*.d.ts w ramach instalacji języka TypeScript, która ma być używana dla funkcji IntelliSense, na przykład: „./node_modules/typescript/lib”.\r\n\r\n- Po określeniu jako ustawienie użytkownika wersja języka TypeScript z pliku „typescript.tsdk” automatycznie zastępuje wbudowaną wersję języka TypeScript.\r\n- Po określeniu jako ustawienia obszaru roboczego plik „typescript.tsdk” umożliwia przełączenie do używania tej wersji obszaru roboczego języka TypeScript dla funkcji IntelliSense przy użyciu polecenia „TypeScript: Select TypeScript version”.\r\n\r\nZobacz [dokumentację języka TypeScript](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions), aby uzyskać więcej szczegółów na temat zarządzania wersjami języka TypeScript.",
			"typescript.disableAutomaticTypeAcquisition": "Wyłącza automatyczne pozyskiwanie typu. Automatyczne pobieranie typu pobiera pakiety „@types” z menedżera npm, aby usprawnić funkcję IntelliSense dla bibliotek zewnętrznych.",
			"typescript.enablePromptUseWorkspaceTsdk": "Umożliwia monitowanie użytkowników o użycie wersji języka TypeScript skonfigurowanej w obszarze roboczym dla funkcji IntelliSense.",
			"typescript.tsserver.enableTracing": "Umożliwia śledzenie wydajności serwera TS w katalogu. Te pliki dziennika mogą służyć do diagnozowania problemów z wydajnością serwera TS. Dziennik może zawierać ścieżki plików, kod źródłowy i inne potencjalnie poufne informacje z projektu.",
			"typescript.tsserver.log": "Umożliwia rejestrowanie serwera języka TS do pliku. Ten dziennik może służyć do diagnozowania problemów z serwerem języka TS. Dziennik może zawierać ścieżki plików, kod źródłowy i inne potencjalnie poufne informacje z projektu.",
			"typescript.tsserver.pluginPaths": "Dodatkowe ścieżki do odnajdywania wtyczek usługi języka TypeScript.",
			"typescript.tsserver.pluginPaths.item": "Ścieżka bezwzględna albo względna. Ścieżka względna zostanie rozpoznana względem folderów obszaru roboczego.",
			"typescript.tsserver.trace": "Umożliwia śledzenie wiadomości wysyłanych do serwera języka TS. Ten ślad może służyć do diagnozowania problemów z serwerem języka TS. Ślad może zawierać ścieżki plików, kod źródłowy i inne potencjalnie poufne informacje z projektu.",
			"typescript.validate.enable": "Włącz/wyłącz weryfikację języka TypeScript.",
			"typescript.format.enable": "Włącz/wyłącz domyślny program formatujący języka TypeScript.",
			"javascript.format.enable": "Włącz/wyłącz domyślny program formatujący języka JavaScript.",
			"format.insertSpaceAfterCommaDelimiter": "Definiuje obsługę spacji po przecinku w funkcji ogranicznika.",
			"format.insertSpaceAfterConstructor": "Definiuje obsługę spacji po słowie kluczowym constructor.",
			"format.insertSpaceAfterSemicolonInForStatements": "Definiuje obsługę spacji po średniku w instrukcji for.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Definiuje obsługę spacji po operatorze binarnym.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Definiuje obsługę spacji po słowach kluczowych w instrukcji przepływu sterowania.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Definiuje obsługę spacji po słowie kluczowym funkcji dla funkcji anonimowych.",
			"format.insertSpaceBeforeFunctionParenthesis": "Definiuje obsługę spacji przed nawiasami argumentu funkcji.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Definiuje obsługę spacji po otwarciu i przed zamknięciem niepustego nawiasu.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Definiuje obsługę spacji po otwarciu i przed zamknięciem niepustych nawiasów.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem niepustych nawiasów klamrowych.",
			"format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem pustych nawiasów klamrowych.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem nawiasów klamrowych ciągu szablonu.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Definiuje obsługę spacji po otwarciu i przed zamknięciem nawiasów klamrowych wyrażenia JSX.",
			"format.insertSpaceAfterTypeAssertion": "Definiuje obsługę spacji po potwierdzeniach typu w języku TypeScript.",
			"format.placeOpenBraceOnNewLineForFunctions": "Określa, czy otwierający nawias klamrowy jest umieszczany w nowym wierszu dla funkcji, czy też nie.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Określa, czy otwierający nawias klamrowy jest umieszczany w nowym wierszu dla bloków kontrolnych, czy też nie.",
			"format.semicolons": "Definiuje obsługę opcjonalnych średników. Wymaga użycia języka TypeScript 3.7 lub nowszego w obszarze roboczym.",
			"format.semicolons.ignore": "Nie wstawiaj ani nie usuwaj średników.",
			"format.semicolons.insert": "Wstaw średniki na końcach instrukcji.",
			"format.semicolons.remove": "Usuń niepotrzebne średniki.",
			"javascript.validate.enable": "Włącz/wyłącz weryfikowanie języka JavaScript.",
			"goToProjectConfig.title": "Przejdź do konfiguracji projektu",
			"javascript.referencesCodeLens.enabled": "Włącz/wyłącz funkcję CodeLens dla odwołań w plikach języka JavaScript.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Włącz/wyłącz funkcję CodeLens dla odwołań wszystkich funkcji w plikach języka JavaScript.",
			"typescript.referencesCodeLens.enabled": "Włącz/wyłącz funkcję CodeLens dla odwołań w plikach języka TypeScript.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Włącz/wyłącz funkcję CodeLens dla odwołań wszystkich funkcji w plikach języka TypeScript.",
			"typescript.implementationsCodeLens.enabled": "Włącz/wyłącz funkcję CodeLens dla implementacji. Ta funkcja CodeLens pokazuje elementy implementujące interfejs.",
			"typescript.openTsServerLog.title": "Otwórz dziennik serwera języka TS",
			"typescript.restartTsServer": "Uruchom ponownie serwer języka TS",
			"typescript.selectTypeScriptVersion.title": "Wybierz wersję języka TypeScript...",
			"typescript.reportStyleChecksAsWarnings": "Zgłaszaj kontrole stylu jako ostrzeżenia.",
			"typescript.npm": "Określa ścieżkę do pliku wykonywalnego menedżera npm używanego do automatycznego pozyskiwania typów.",
			"typescript.check.npmIsInstalled": "Sprawdź, czy menedżer npm jest zainstalowany na potrzeby automatycznego pozyskiwania typów.",
			"configuration.suggest.names": "Włącz/wyłącz uwzględnianie unikatowych nazw z pliku w sugestiach języka JavaScript. Pamiętaj, że sugestie nazw są zawsze wyłączone w kodzie JavaScript, który jest semantycznie sprawdzany przy użyciu funkcji „@ts-check” lub „checkJs”.",
			"typescript.tsc.autoDetect": "Steruje automatycznym wykrywaniem zadań tsc.",
			"typescript.tsc.autoDetect.off": "Wyłącz tę funkcję.",
			"typescript.tsc.autoDetect.on": "Utwórz zarówno zadania kompilowania i monitorowania.",
			"typescript.tsc.autoDetect.build": "Twórz tylko zadania kompilacji pojedynczego uruchomienia.",
			"typescript.tsc.autoDetect.watch": "Twórz tylko zadania kompilacji i monitorowania.",
			"typescript.problemMatchers.tsc.label": "Problemy z językiem TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemy z językiem TypeScript (tryb monitorowania)",
			"configuration.suggest.paths": "Włącz/wyłącz sugestie dotyczące ścieżek w instrukcjach importu i wymagaj wywołań.",
			"configuration.tsserver.useSeparateSyntaxServer": "Włącz/wyłącz tworzenie oddzielnego serwera języka TypeScript, który może szybciej reagować na operacje związane ze składnią, takie jak obliczenie składania lub obliczenie symboli dokumentów. Wymaga użycia w obszarze roboczym języka TypeScript 3.4.0 lub nowszego.",
			"configuration.tsserver.maxTsServerMemory": "Ustaw maksymalną ilość pamięci (w MB), która ma zostać przydzielona do procesu serwera języka TypeScript",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Eksperymentalne) Umożliwia raportowanie błędów w całym projekcie.",
			"typescript.locale": "Ustawia ustawienia regionalne służące do raportowania błędów języków JavaScript i TypeScript. Domyślna wartość „null” powoduje użycie ustawień regionalnych programu VS Code.",
			"configuration.implicitProjectConfig.checkJs": "Włącz/wyłącz sprawdzanie semantyczne plików języka JavaScript. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.javascript.checkJs.checkJs.deprecation": "To ustawienie zostało zastąpione przez „#js/ts.implicitProjectConfig.checkJs#”.",
			"configuration.implicitProjectConfig.experimentalDecorators": "Włącz/wyłącz parametr „experimentalDecorators” w plikach języka JavaScript, które nie są częścią projektu. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.javascript.checkJs.experimentalDecorators.deprecation": "To ustawienie zostało zastąpione przez „#js/ts.implicitProjectConfig.experimentalDecorators#”.",
			"configuration.implicitProjectConfig.strictNullChecks": "Włącz/wyłącz [ścisłe kontroli wartości null](https://www.typescriptlang.org/tsconfig#strictNullChecks) w plikach języków JavaScript i TypeScript, które nie są częścią projektu. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.implicitProjectConfig.strictFunctionTypes": "Włącz/wyłącz [dokładne typy funkcji](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) w plikach języków JavaScript i TypeScript, które nie są częścią projektu. Istniejące pliki „jsconfig.json” lub „tsconfig.json” przesłaniają to ustawienie.",
			"configuration.suggest.autoImports": "Włącz/wyłącz sugestie automatycznego importowania.",
			"taskDefinition.tsconfig.description": "Plik tsconfig, który definiuje kompilację języka TS.",
			"javascript.suggestionActions.enabled": "Włącz/wyłącz diagnostykę sugestii dla plików języka JavaScript w edytorze.",
			"typescript.suggestionActions.enabled": "Włącz/wyłącz diagnostykę sugestii dla plików języka TypeScript w edytorze.",
			"typescript.preferences.quoteStyle": "Preferowany styl cudzysłowów do stosowania w przypadku szybkich poprawek: cudzysłowy „pojedyncze”, cudzysłowy „podwójne” lub „automatyczny” typ cudzysłowów wnioskowania na podstawie istniejących importów.",
			"typescript.preferences.importModuleSpecifier": "Preferowany styl ścieżki dla importów automatycznych.",
			"typescript.preferences.importModuleSpecifier.shortest": "Preferuje import bezwzględny tylko wtedy, gdy jest dostępny import bezwzględny mający mniej segmentów ścieżki niż import względny.",
			"typescript.preferences.importModuleSpecifier.relative": "Preferuje ścieżkę względną do lokalizacji importowanego pliku.",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Preferuje import bezwzględny na podstawie wartości „baseUrl” lub „paths” skonfigurowanej w pliku w „jsconfig.json” / „tsconfig.json”.",
			"typescript.preferences.importModuleSpecifier.projectRelative": "Preferuje używanie importu bezwzględnego tylko wtedy, gdy ścieżka importu względnego powoduje opuszczenie katalogu projektu lub pakietu. Wymaga języka TypeScript 4.2 lub nowszej wersji w obszarze roboczym.",
			"typescript.preferences.importModuleSpecifierEnding": "Preferowane zakończenie ścieżki dla importów automatycznych.",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Użyj ustawień projektu, aby wybrać wartość domyślną.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Skróć „./component/index.js” do „./component”.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Skróć „./component/index.js” do „./component/index”.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Nie skracaj końców ścieżek; uwzględnij rozszerzenie „.js”.",
			"typescript.preferences.includePackageJsonAutoImports": "Włącz/wyłącz wyszukiwanie zależności „package.json” dla dostępnych importów automatycznych.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Wyszukaj zależności na podstawie szacowanego wpływu na wydajność.",
			"typescript.preferences.includePackageJsonAutoImports.on": "Zawsze wyszukuj zależności.",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nigdy nie wyszukuj zależności.",
			"typescript.updateImportsOnFileMove.enabled": "Włącz/wyłącz automatyczne aktualizowanie ścieżek importu podczas zmiany nazwy lub przenoszenia pliku w programie VS Code.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Monituj przy każdej zmianie nazwy.",
			"typescript.updateImportsOnFileMove.enabled.always": "Zawsze automatycznie aktualizuj ścieżki.",
			"typescript.updateImportsOnFileMove.enabled.never": "Nigdy nie zmieniaj nazw ścieżek i nie monituj.",
			"typescript.autoClosingTags": "Włącz/wyłącz automatyczne zamykanie tagów JSX.",
			"typescript.suggest.enabled": "Włącz/wyłącz sugestie autouzupełniania.",
			"configuration.surveys.enabled": "Włącz/wyłącz okazjonalne ankiety, które pomagają nam ulepszyć obsługę języków JavaScript i TypeScript w programie VS Code.",
			"configuration.suggest.completeJSDocs": "Włącz/wyłącz sugestię do uzupełniania komentarzy JSDoc.",
			"configuration.tsserver.watchOptions": "Skonfiguruj, które strategie monitorowania powinny być używane do śledzenia plików i katalogów. Wymaga użycia w obszarze roboczym języka TypeScript 3.8 lub nowszego.",
			"configuration.tsserver.watchOptions.watchFile": "Strategia określająca sposób monitorowania poszczególnych plików.",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę w ustalonych odstępach czasu.",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę, ale użyj heurystyki, aby sprawdzać niektóre typy plików rzadziej niż inne.",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Korzystaj z kolejek dynamicznych, aby rzadziej modyfikowane pliki nie były tak często sprawdzane.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Spróbuj użyć natywnych zdarzeń systemu operacyjnego/systemu plików do zmian pliku.",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Spróbuj użyć natywnych zdarzeń systemu operacyjnego/systemu plików, aby nasłuchiwać zmian w katalogach zawierających plik. Może to prowadzić do korzystania z mniejszej liczby obserwatorów plików, ale też do obniżenia dokładności.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategia określająca sposób monitorowania całych drzew katalogów w systemach, które nie mają funkcji cyklicznego monitorowania plików.",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Sprawdzaj każdy katalog pod kątem zmian kilka razy na sekundę w ustalonych odstępach czasu.",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Użyj kolejki dynamicznej, w której rzadziej modyfikowane katalogi będą rzadziej sprawdzane.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Spróbuj użyć natywnych zdarzeń systemu operacyjnego/systemu plików do zmian katalogu.",
			"configuration.tsserver.watchOptions.fallbackPolling": "Podczas korzystania ze zdarzeń systemu plików ta opcja określa strategię sondowania, która jest używana, gdy w systemie zabraknie natywnych obserwatorów plików i/lub nie obsługuje on natywnych obserwatorów plików.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę w ustalonych odstępach czasu.",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Sprawdzaj każdy plik pod kątem zmian kilka razy na sekundę, ale użyj heurystyki, aby sprawdzać niektóre typy plików rzadziej niż inne.",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Użyj kolejki dynamicznej, w której rzadziej modyfikowane pliki będą rzadziej sprawdzane.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Wyłącz odroczone monitorowanie katalogów. Odroczone monitorowanie jest przydatne, gdy wiele zmian plików może wystąpić jednocześnie (np. zmiana w node_modules z uruchamiania instalacji menedżera npm), ale można je wyłączyć przy użyciu tej flagi dla niektórych mniej popularnych konfiguracji.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Ustawienie „typescript.preferences.renameShorthandProperties” zostało zastąpione elementem „typescript.preferences.useAliasesForRenames”",
			"typescript.preferences.useAliasesForRenames": "Włącz/wyłącz wprowadzanie aliasów dla właściwości skróconych obiektu podczas zmieniania nazw. Wymaga użycia języka TypeScript 3.4 lub nowszego w obszarze roboczym.",
			"typescript.workspaceSymbols.scope": "Steruje tym, które pliki są wyszukiwane przez [funkcję przejścia do symbolu w obszarze roboczym](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Przeszukaj wszystkie otwarte projekty języka JavaScript lub TypeScript w poszukiwaniu symboli. Wymaga używania w obszarze roboczym języka TypeScript 3.9 lub nowszego.",
			"typescript.workspaceSymbols.scope.currentProject": "Wyszukuj tylko symbole w bieżącym projekcie języka JavaScript lub TypeScript.",
			"codeActions.refactor.extract.constant.title": "Wyodrębnij stałą",
			"codeActions.refactor.extract.constant.description": "Wyodrębnij wyrażenie do stałej.",
			"codeActions.refactor.extract.function.title": "Wyodrębnij funkcję",
			"codeActions.refactor.extract.function.description": "Wyodrębnij wyrażenie do metody lub funkcji.",
			"codeActions.refactor.extract.type.title": "Wyodrębnij typ",
			"codeActions.refactor.extract.type.description": "Wyodrębnij typ do aliasu typu.",
			"codeActions.refactor.extract.interface.title": "Wyodrębnij interfejs",
			"codeActions.refactor.extract.interface.description": "Wyodrębnij typ do interfejsu.",
			"codeActions.refactor.rewrite.import.title": "Konwertuj import",
			"codeActions.refactor.rewrite.import.description": "Konwertuj między nazwanymi importami i importami przestrzeni nazw.",
			"codeActions.refactor.rewrite.export.title": "Konwertuj eksport",
			"codeActions.refactor.rewrite.export.description": "Konwertuj między eksportem domyślnym a eksportem nazwanym.",
			"codeActions.refactor.move.newFile.title": "Przenieś do nowego pliku",
			"codeActions.refactor.move.newFile.description": "Przenieś wyrażenie do nowego pliku.",
			"codeActions.refactor.rewrite.arrow.braces.title": "Przepisz nawiasy klamrowe strzałki",
			"codeActions.refactor.rewrite.arrow.braces.description": "Dodaj lub usuń nawiasy klamrowe w funkcji strzałki.",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Konwertuj parametry na obiekt destrukturyzowany",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generuj metody dostępu",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generuj metody dostępu „get” i „set”.",
			"codeActions.source.organizeImports.title": "Organizuj importy"
		},
		"dist/utils/api": {
			"invalidVersion": "nieprawidłowa wersja"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Konfiguruj plik tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Konfiguruj plik jsconfig.json",
			"typescript.noTypeScriptProjectConfig": "Plik nie jest częścią projektu języka TypeScript. Kliknij [tutaj]({0}), aby dowiedzieć się więcej.",
			"typescript.noJavaScriptProjectConfig": "Plik nie jest częścią projektu języka JavaScript. Kliknij [tutaj]({0}), aby dowiedzieć się więcej.",
			"typescript.projectConfigNoWorkspace": "Otwórz folder w programie VS Code, aby użyć projektu języka TypeScript lub JavaScript",
			"typescript.projectConfigUnsupportedFile": "Nie można było określić projektu języka TypeScript lub JavaScript. Nieobsługiwany typ pliku",
			"typescript.projectConfigCouldNotGetInfo": "Nie można było określić projektu języka TypeScript lub JavaScript"
		},
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Określenie referencji okazało się niemożliwe."
		},
		"dist/languageFeatures/completions": {
			"selectCodeAction": "Wybierz akcję kodu do zastosowania",
			"acquiringTypingsLabel": "Trwa uzyskiwanie definicji typings...",
			"acquiringTypingsDetail": "Uzyskiwanie definicji typings dla funkcji IntelliSense.",
			"autoImportLabel": "Automatyczne importowanie z: {0}"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Włącza sprawdzanie semantyczne w pliku języka JavaScript. Musi znajdować się na początku pliku.",
			"ts-nocheck": "Wyłącza sprawdzanie semantyczne w pliku JavaScript. Musi znajdować się na początku pliku.",
			"ts-ignore": "Pomija błędy @ts-check w następnym wierszu pliku.",
			"ts-expect-error": "Pomija błędy @ts-check w następnym wierszu pliku, oczekiwane jest, że będzie istniał co najmniej jeden wiersz."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"oneImplementationLabel": "1 implementacja",
			"manyImplementationLabel": "Implementacje: {0}"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Komentarz JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Organizuj importy"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (popraw wszystko w pliku)"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Napraw wszystko",
			"autoFix.unused.label": "Usuń cały nieużywany kod",
			"autoFix.missingImports.label": "Dodaj wszystkie brakujące importy"
		},
		"dist/languageFeatures/refactor": {
			"refactoringFailed": "Nie można zastosować refaktoryzacji",
			"extractConstant.disabled.title": "Wyodrębnij do stałej",
			"extractConstant.disabled.reason": "Nie można wyodrębnić bieżącego zaznaczenia",
			"extractFunction.disabled.title": "Wyodrębnij do funkcji",
			"extractFunction.disabled.reason": "Nie można wyodrębnić bieżącego zaznaczenia",
			"refactor.documentation.title": "Dowiedz się więcej o refaktoryzacjach w języku JS/TS"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"oneReferenceLabel": "1 odwołanie",
			"manyReferenceLabel": "Odwołania: {0}"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Wystąpił błąd podczas zmiany nazwy pliku"
		},
		"dist/tsServer/versionStatus": {
			"projectQuickPick.placeholder": "Informacje o projekcie języka TypeScript",
			"projectQuickPick.version.label": "Wybierz wersję języka TypeScript...",
			"projectQuickPick.version.description": "[obecnie = {0}]",
			"projectQuickPick.project.create": "Utwórz plik tsconfig",
			"projectQuickPick.project.create.description": "Ten plik nie jest obecnie częścią projektu tsconfig/jsconfig",
			"projectQuickPick.version.goProjectConfig": "Otwórz plik tsconfig",
			"projectQuickPick.help": "Pomoc języka TypeScript",
			"projectInfo.name": "TypeScript: informacje o projekcie"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Ścieżka {0} nie wskazuje prawidłowej instalacji tsserver. Wykonywany jest powrót do dołączonej wersji języka TypeScript.",
			"serverExitedWithError": "Serwer języka TypeScript zakończył pracę z błędem. Komunikat o błędzie: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "Rejestrowanie serwera języka TS jest wyłączone. Ustaw plik „typescript.tsserver.log” i uruchom ponownie serwer języka TS, aby włączyć rejestrowanie",
			"typescript.openTsServerLog.enableAndReloadOption": "Włącz rejestrowanie i uruchom ponownie serwer języka TS",
			"typescript.openTsServerLog.noLogFile": "Serwer języka TS nie rozpoczął rejestrowania.",
			"openTsServerLog.openFileFailedFailed": "Nie można było otworzyć pliku dziennika serwera języka TS",
			"serverDiedReportIssue": "Zgłoś problem",
			"serverDiedAfterStart": "Usługa języka TypeScript uległa awarii 5 razy bezpośrednio po jej uruchomieniu. Usługa nie zostanie ponownie uruchomiona.",
			"serverDied": "Usługa języka TypeScript nieoczekiwanie uległa awarii 5 razy w ciągu ostatnich 5 minut.",
			"serverDiedOnce": "Usługa języka TypeScript nieoczekiwanie uległa awarii.",
			"serverLoading.progress": "Inicjowanie funkcji języka JS/TS"
		},
		"dist/tsServer/versionManager": {
			"selectTsVersion": "Wybierz wersję języka TypeScript używaną dla funkcji języka JavaScript i TypeScript",
			"useVSCodeVersionOption": "Użyj wersji programu VS Code",
			"useWorkspaceVersionOption": "Użyj wersji obszaru roboczego",
			"allow": "Zezwól",
			"dismiss": "Odrzuć",
			"suppress prompt": "Nigdy w tym obszarze roboczym",
			"promptUseWorkspaceTsdk": "Ten obszar roboczy zawiera wersję języka TypeScript. Czy chcesz użyć wersji języka TypeScript z obszaru roboczego dla funkcji języków TypeScript i JavaScript?",
			"learnMore": "Dowiedz się więcej na temat zarządzania wersjami języka TypeScript"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Pobieranie danych w celu poprawienia działa funkcji IntelliSense dla języka TypeScript",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Nie pokazuj ponownie",
			"typesInstallerInitializationFailed.title": "Nie można zainstalować plików typings dla funkcji języka JavaScript. Upewnij się, że menedżer NPM jest zainstalowany, lub skonfiguruj element „typescript.npm” w ustawieniach użytkownika. Kliknij [tutaj]({0}), aby dowiedzieć się więcej."
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript: konfigurowanie wykluczeń",
			"hintExclude": "Aby włączyć funkcje języka JavaScript/TypeScript w całym projekcie, należy wykluczyć foldery z wieloma plikami, na przykład: {0}",
			"hintExclude.generic": "Aby włączyć funkcje języka JavaScript/TypeScript w całym projekcie, wyklucz duże foldery z plikami źródłowymi, nad którymi nie pracujesz.",
			"large.label": "Skonfiguruj wykluczenia",
			"hintExclude.tooltip": "Aby włączyć funkcje języka JavaScript/TypeScript w całym projekcie, wyklucz duże foldery z plikami źródłowymi, nad którymi nie pracujesz."
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"renameProgress.title": "Sprawdzanie aktualizacji importów JS/TS",
			"prompt": "Aktualizować importy dla elementu „{0}”?",
			"promptMoreThanOne": "Zaktualizować importy dla następujących {0} plików?",
			"reject.title": "Nie",
			"accept.title": "Tak",
			"always.title": "Zawsze automatycznie aktualizuj importy",
			"never.title": "Nigdy nie aktualizuj importów automatycznie",
			"moreFile": "... 1 dodatkowy plik nie został pokazany",
			"moreFiles": "... {0} dodatkowych plików nie zostało pokazanych"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "Ścieżka {0} nie wskazuje prawidłowej instalacji tsserver. Wykonywany jest powrót do dołączonej wersji języka TypeScript."
		},
		"dist/task/taskProvider": {
			"badTsConfig": "Zadanie języka TypeScript w pliku tasks.json zawiera „\\\\”. Zadania języka TypeScript w pliku tsconfig muszą używać „/”",
			"buildTscLabel": "kompilacja — {0}",
			"buildAndWatchTscLabel": "monitoruj – {0}"
		}
	}
}