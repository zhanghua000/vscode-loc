{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Git",
			"description": "Git SCM Integration",
			"command.setLogLevel": "Set Log Level...",
			"command.clone": "Sklonuj",
			"command.init": "Zainicjuj repozytorium",
			"command.openRepository": "Open Repository",
			"command.close": "Close Repository",
			"command.refresh": "Odśwież",
			"command.openChange": "Otwórz zmiany",
			"command.openFile": "Otwórz plik",
			"command.openHEADFile": "Open File (HEAD)",
			"command.stage": "Stage Changes",
			"command.stageAll": "Stage All Changes",
			"command.stageAllTracked": "Stage All Tracked Changes",
			"command.stageAllUntracked": "Stage All Untracked Changes",
			"command.stageAllMerge": "Stage All Merge Changes",
			"command.stageSelectedRanges": "Stage Selected Ranges",
			"command.revertSelectedRanges": "Revert Selected Ranges",
			"command.stageChange": "Stage Change",
			"command.revertChange": "Revert Change",
			"command.unstage": "Unstage Changes",
			"command.unstageAll": "Cofnij przygotowanie wszystkich zmian",
			"command.unstageSelectedRanges": "Unstage Selected Ranges",
			"command.clean": "Odrzuć zmiany",
			"command.cleanAll": "Odrzuć wszystkie zmiany",
			"command.cleanAllTracked": "Discard All Tracked Changes",
			"command.cleanAllUntracked": "Discard All Untracked Changes",
			"command.commit": "Commit",
			"command.commitStaged": "Zatwierdź wystawione",
			"command.commitEmpty": "Commit Empty",
			"command.commitStagedSigned": "Commit Staged (Signed Off)",
			"command.commitStagedAmend": "Commit Staged (Amend)",
			"command.commitAll": "Zatwierdź wszystko",
			"command.commitAllSigned": "Commit All (Signed Off)",
			"command.commitAllAmend": "Commit All (Amend)",
			"command.commitNoVerify": "Zatwierdź (bez weryfikacji)",
			"command.commitStagedNoVerify": "Zatwierdź przejściowe (bez weryfikacji)",
			"command.commitEmptyNoVerify": "Zatwierdź puste (bez weryfikacji)",
			"command.commitStagedSignedNoVerify": "Zatwierdź przejściowe (sygnowane, bez weryfikacji)",
			"command.commitStagedAmendNoVerify": "Zatwierdź przejściowe (popraw, bez weryfikacji)",
			"command.commitAllNoVerify": "Zatwierdź wszystko (bez weryfikacji)",
			"command.commitAllSignedNoVerify": "Zatwierdź wszystko (sygnowane, bez weryfikacji)",
			"command.commitAllAmendNoVerify": "Zatwierdź wszystko (popraw, bez weryfikacji)",
			"command.restoreCommitTemplate": "Restore Commit Template",
			"command.undoCommit": "Undo Last Commit",
			"command.checkout": "Checkout to...",
			"command.branch": "Create Branch...",
			"command.branchFrom": "Create Branch From...",
			"command.deleteBranch": "Delete Branch...",
			"command.renameBranch": "Rename Branch...",
			"command.merge": "Merge Branch...",
			"command.createTag": "Create Tag",
			"command.deleteTag": "Delete Tag",
			"command.fetch": "Sprawdź",
			"command.fetchPrune": "Fetch (Prune)",
			"command.fetchAll": "Fetch From All Remotes",
			"command.pull": "Pobierz",
			"command.pullRebase": "Pull (Rebase)",
			"command.pullFrom": "Pull from...",
			"command.push": "Wypchnij",
			"command.pushForce": "Push (Force)",
			"command.pushTo": "Push to...",
			"command.pushToForce": "Push to... (Force)",
			"command.pushFollowTags": "Push (Follow Tags)",
			"command.pushFollowTagsForce": "Push (Follow Tags, Force)",
			"command.addRemote": "Add Remote...",
			"command.removeRemote": "Remove Remote",
			"command.sync": "Synchronizuj",
			"command.syncRebase": "Sync (Rebase)",
			"command.publish": "Publish Branch...",
			"command.showOutput": "Show Git Output",
			"command.ignore": "Add to .gitignore",
			"command.revealInExplorer": "Reveal in Side Bar",
			"command.rebaseAbort": "Abort Rebase",
			"command.stashIncludeUntracked": "Stash (Include Untracked)",
			"command.stash": "Stash",
			"command.stashPop": "Pop Stash...",
			"command.stashPopLatest": "Pop Latest Stash",
			"command.stashApply": "Apply Stash...",
			"command.stashApplyLatest": "Apply Latest Stash",
			"command.stashDrop": "Drop Stash...",
			"command.timelineOpenDiff": "Otwórz zmiany",
			"command.timelineCopyCommitId": "Copy Commit ID",
			"command.timelineCopyCommitMessage": "Copy Commit Message",
			"config.enabled": "Whether git is enabled.",
			"config.path": "Ścieżka i nazwa pliku wykonywalnego Git, np. „C:\\Program Files\\Git\\bin\\git.exe” (Windows). Może to być również tablica wartości ciągów zawierająca wiele ścieżek do przeszukania.",
			"config.autoRepositoryDetection": "Configures when repositories should be automatically detected.",
			"config.autoRepositoryDetection.true": "Scan for both subfolders of the current opened folder and parent folders of open files.",
			"config.autoRepositoryDetection.false": "Disable automatic repository scanning.",
			"config.autoRepositoryDetection.subFolders": "Scan for subfolders of the currently opened folder.",
			"config.autoRepositoryDetection.openEditors": "Scan for parent folders of open files.",
			"config.autorefresh": "Whether auto refreshing is enabled.",
			"config.autofetch": "When enabled, commits will automatically be fetched from the default remote of the current Git repository.",
			"config.autofetchPeriod": "Duration in seconds between each automatic git fetch, when `git.autofetch` is enabled.",
			"config.confirmSync": "Confirm before synchronizing git repositories.",
			"config.countBadge": "Controls the Git count badge.",
			"config.countBadge.all": "Count all changes.",
			"config.countBadge.tracked": "Count only tracked changes.",
			"config.countBadge.off": "Turn off counter.",
			"config.checkoutType": "Controls what type of branches are listed when running `Checkout to...`.",
			"config.checkoutType.all": "Show all references.",
			"config.checkoutType.local": "Show only local branches.",
			"config.checkoutType.tags": "Show only tags.",
			"config.checkoutType.remote": "Show only remote branches.",
			"config.branchValidationRegex": "A regular expression to validate new branch names.",
			"config.branchWhitespaceChar": "The character to replace whitespace in new branch names.",
			"config.ignoreLegacyWarning": "Ignores the legacy Git warning.",
			"config.ignoreMissingGitWarning": "Ignores the warning when Git is missing.",
			"config.ignoreWindowsGit27Warning": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
			"config.ignoreLimitWarning": "Ignores the warning when there are too many changes in a repository.",
			"config.defaultCloneDirectory": "The default location to clone a git repository.",
			"config.enableSmartCommit": "Commit all changes when there are no staged changes.",
			"config.smartCommitChanges": "Control which changes are automatically staged by Smart Commit.",
			"config.smartCommitChanges.all": "Automatically stage all changes.",
			"config.smartCommitChanges.tracked": "Automatically staged tracked changes only.",
			"config.suggestSmartCommit": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
			"config.enableCommitSigning": "Enables commit signing with GPG or X.509.",
			"config.discardAllScope": "Controls what changes are discarded by the `Discard all changes` command. `all` discards all changes. `tracked` discards only tracked files. `prompt` shows a prompt dialog every time the action is run.",
			"config.decorations.enabled": "Controls whether Git contributes colors and badges to the explorer and the open editors view.",
			"config.enableStatusBarSync": "Controls whether the Git Sync command appears in the status bar.",
			"config.promptToSaveFilesBeforeCommit": "Controls whether Git should check for unsaved files before committing.",
			"config.promptToSaveFilesBeforeCommit.always": "Check for any unsaved files.",
			"config.promptToSaveFilesBeforeCommit.staged": "Check only for unsaved staged files.",
			"config.promptToSaveFilesBeforeCommit.never": "Wyłącz to sprawdzenie.",
			"config.postCommitCommand": "Runs a git command after a successful commit.",
			"config.postCommitCommand.none": "Don't run any command after a commit.",
			"config.postCommitCommand.push": "Run 'Git Push' after a successful commit.",
			"config.postCommitCommand.sync": "Run 'Git Sync' after a successful commit.",
			"config.showInlineOpenFileAction": "Controls whether to show an inline Open File action in the Git changes view.",
			"config.showPushSuccessNotification": "Controls whether to show a notification when a push is successful.",
			"config.inputValidation": "Controls when to show commit message input validation.",
			"config.inputValidationLength": "Controls the commit message length threshold for showing a warning.",
			"config.inputValidationSubjectLength": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.",
			"config.detectSubmodules": "Controls whether to automatically detect git submodules.",
			"config.detectSubmodulesLimit": "Controls the limit of git submodules detected.",
			"config.alwaysShowStagedChangesResourceGroup": "Always show the Staged Changes resource group.",
			"config.alwaysSignOff": "Controls the signoff flag for all commits.",
			"config.ignoredRepositories": "List of git repositories to ignore.",
			"config.scanRepositories": "List of paths to search for git repositories in.",
			"config.showProgress": "Controls whether git actions should show progress.",
			"config.rebaseWhenSync": "Force git to use rebase when running the sync command.",
			"config.confirmEmptyCommits": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
			"config.fetchOnPull": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
			"config.pullTags": "Fetch all tags when pulling.",
			"config.autoStash": "Stash any changes before pulling and restore them after successful pull.",
			"config.allowForcePush": "Controls whether force push (with or without lease) is enabled.",
			"config.useForcePushWithLease": "Controls whether force pushing uses the safer force-with-lease variant.",
			"config.confirmForcePush": "Controls whether to ask for confirmation before force-pushing.",
			"config.allowNoVerifyCommit": "Określa, czy zezwalać na zatwierdzanie bez uruchamiania wpięć pre-commit i commit-msg.",
			"config.confirmNoVerifyCommit": "Określa, czy pytać o potwierdzenie przed zatwierdzeniem bez weryfikacji.",
			"config.openDiffOnClick": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
			"config.supportCancellation": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
			"config.branchSortOrder": "Controls the sort order for branches.",
			"config.untrackedChanges": "Controls how untracked changes behave.",
			"config.untrackedChanges.mixed": "Wszystkie zmiany, śledzone i nieśledzone, pojawiają się razem i zachowują się jednakowo.",
			"config.untrackedChanges.separate": "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
			"config.untrackedChanges.hidden": "Untracked changes are hidden and excluded from several actions.",
			"config.showCommitInput": "Controls whether to show the commit input in the Git source control panel.",
			"config.terminalAuthentication": "Controls whether to enable VS Code to be the authentication handler for git processes spawned in the integrated terminal. Note: terminals need to be restarted to pick up a change in this setting.",
			"submenu.commit": "Commit",
			"submenu.commit.amend": "Amend",
			"submenu.commit.signoff": "Sign Off",
			"submenu.changes": "Changes",
			"submenu.pullpush": "Pull, Push",
			"submenu.branch": "Branch",
			"submenu.remotes": "Remote",
			"submenu.stash": "Stash",
			"colors.added": "Color for added resources.",
			"colors.modified": "Color for modified resources.",
			"colors.deleted": "Color for deleted resources.",
			"colors.untracked": "Color for untracked resources.",
			"colors.ignored": "Color for ignored resources.",
			"colors.conflict": "Color for resources with conflicts.",
			"colors.submodule": "Color for submodule resources.",
			"view.workbench.scm.missing": "A valid git installation was not detected, more details can be found in the [git output](command:git.showOutput).\r\nPlease [install git](https://git-scm.com/), or learn more about how to use git and source control in VS Code in [our docs](https://aka.ms/vscode-scm).\r\nIf you're using a different version control system, you can [search the Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) for additional extensions.",
			"view.workbench.scm.disabled": "If you would like to use git features, please enable git in your [settings](command:workbench.action.openSettings?%5B%22git.enabled%22%5D).\r\nTo learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).",
			"view.workbench.scm.empty": "In order to use git features, you can open a folder containing a git repository or clone from a URL.\r\n[Open Folder](command:vscode.openFolder)\r\n[Clone Repository](command:git.clone)\r\nTo learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).",
			"view.workbench.scm.folder": "Obecnie otwarty folder nie zawiera repozytorium Git. Możesz zainicjować repozytorium, co spowoduje włączenie funkcji kontroli źródła obsługiwanych przez system Git.\r\n[Inicjowanie repozytorium](command:git.init?%5Btrue%5D)\r\nAby dowiedzieć się więcej o tym, jak używać systemu Git i kontroli źródła w programie VS Code, [przeczytaj naszą dokumentację](https://aka.ms/vscode-scm).",
			"view.workbench.scm.workspace": "Obecnie otwarty obszar roboczy nie zawiera żadnych folderów, w których znajdują się repozytoria Git. Możesz zainicjować repozytorium w folderze, co spowoduje włączenie funkcji kontroli źródła obsługiwanych przez system Git.\r\n[Inicjowanie repozytorium](command:git.init)\r\nAby dowiedzieć się więcej o tym, jak używać systemu Git i kontroli źródła w programie VS Code, [przeczytaj naszą dokumentację](https://aka.ms/vscode-scm).",
			"view.workbench.scm.emptyWorkspace": "The workspace currently open doesn't have any folders containing git repositories.\r\n[Add Folder to Workspace](command:workbench.action.addRootFolder)\r\nTo learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).",
			"view.workbench.cloneRepository": "You can also clone a repository from a URL. To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).\r\n[Clone Repository](command:git.clone)"
		},
		"dist/repository": {
			"index modified": "Index Modified",
			"modified": "Zmodyfikowane",
			"index added": "Index Added",
			"index deleted": "Index Deleted",
			"deleted": "Usunięte",
			"index renamed": "Index Renamed",
			"index copied": "Index Copied",
			"untracked": "Nieśledzone",
			"ignored": "Zignorowane",
			"intent to add": "Intent to Add",
			"both deleted": "Oba usunięte",
			"added by us": "Dodane przez nas",
			"deleted by them": "Deleted By Them",
			"added by them": "Added By Them",
			"deleted by us": "Deleted By Us",
			"both added": "Both Added",
			"both modified": "Both Modified",
			"open": "Otwórz",
			"commit": "Commit",
			"merge changes": "Merge Changes",
			"staged changes": "Staged Changes",
			"changes": "Changes",
			"untracked changes": "Untracked Changes",
			"push success": "Successfully pushed.",
			"commit in rebase": "It's not possible to change the commit message in the middle of a rebase. Please complete the rebase operation and use interactive rebase instead.",
			"commitMessageWhitespacesOnlyWarning": "Current commit message only contains whitespace characters",
			"commitMessageCountdown": "{0} characters left in current line",
			"commitMessageWarning": "{0} characters over {1} in current line",
			"sync is unpredictable": "Syncing. Cancelling may cause serious damages to the repository",
			"huge": "The git repository at '{0}' has too many active changes, only a subset of Git features will be enabled.",
			"neveragain": "Nie pokazuj ponownie",
			"add known": "Would you like to add '{0}' to .gitignore?",
			"yes": "Yes",
			"commitMessageWithHeadLabel": "Message ({0} to commit on '{1}')",
			"commitMessage": "Message ({0} to commit)"
		},
		"dist/remoteSource": {
			"type to search": "Repository name (type to search)",
			"type to filter": "Repository name",
			"none found": "No remote repositories found.",
			"error": "$(error) Error: {0}",
			"provide url": "Provide repository URL",
			"provide url or pick": "Provide repository URL or pick a repository source.",
			"url": "URL",
			"pick url": "Choose a URL to clone from."
		},
		"dist/timelineProvider": {
			"git.timeline.source": "Git History",
			"git.timeline.you": "You",
			"git.timeline.stagedChanges": "Wystawione zmiany",
			"git.timeline.detail": "{0}  \\u2014 {1}\r\n{2}\r\n\r\n{3}",
			"git.index": "Index",
			"git.timeline.uncommitedChanges": "Uncommited Changes",
			"git.workingTree": "Working Tree"
		},
		"dist/main": {
			"looking": "Looking for git in: {0}",
			"using git": "Używanie usługi git {0} z {1}",
			"downloadgit": "Download Git",
			"neverShowAgain": "Nie pokazuj ponownie",
			"notfound": "Git not found. Install it or configure it using the 'git.path' setting.",
			"updateGit": "Update Git",
			"git20": "You seem to have git {0} installed. Code works best with git >= 2",
			"git2526": "There are known issues with the installed Git {0}. Please update to Git >= 2.27 for the git features to work correctly."
		},
		"dist/model": {
			"not supported": "Absolute paths not supported in 'git.scanRepositories' setting.",
			"too many submodules": "The '{0}' repository has {1} submodules which won't be opened automatically. You can still open each one individually by opening a file within.",
			"no repositories": "There are no available repositories",
			"pick repo": "Choose a repository"
		},
		"dist/autofetch": {
			"yes": "Yes",
			"no": "Nie",
			"not now": "Ask Me Later",
			"suggest auto fetch": "Would you like Code to [periodically run 'git fetch']({0})?"
		},
		"dist/statusbar": {
			"rebasing": "Rebasing",
			"publish to": "Publish to {0}",
			"publish to...": "Publish to...",
			"sync changes": "Synchronize Changes",
			"publish changes": "Publish Changes",
			"syncing changes": "Synchronizing Changes..."
		},
		"dist/commands": {
			"tag at": "Tag w: {0}",
			"remote branch at": "Remote branch at {0}",
			"create branch": "Create new branch...",
			"create branch from": "Create new branch from...",
			"add remote": "Add a new remote...",
			"current": "Current",
			"select log level": "Select log level",
			"changed": "Log level changed to: {0}",
			"git.title.index": "{0} (Index)",
			"git.title.workingTree": "{0} (Working Tree)",
			"git.title.theirs": "{0} (Theirs)",
			"git.title.ours": "{0} (Ours)",
			"git.title.untracked": "{0} (Untracked)",
			"clonefrom": "Clone from {0}",
			"repourl": "Adres URL repozytorium",
			"selectFolder": "Select Repository Location",
			"cloning": "Cloning git repository '{0}'...",
			"proposeopen": "Would you like to open the cloned repository?",
			"openrepo": "Otwórz",
			"openreponew": "Otwórz w nowym oknie",
			"add": "Add to Workspace",
			"proposeopen2": "Would you like to open the cloned repository, or add it to the current workspace?",
			"init": "Pick workspace folder to initialize git repo in",
			"choose": "Choose Folder...",
			"init repo": "Zainicjuj repozytorium",
			"create repo": "Zainicjuj repozytorium",
			"are you sure": "This will create a Git repository in '{0}'. Are you sure you want to continue?",
			"proposeopen init": "Would you like to open the initialized repository?",
			"proposeopen2 init": "Would you like to open the initialized repository, or add it to the current workspace?",
			"open repo": "Open Repository",
			"HEAD not available": "HEAD version of '{0}' is not available.",
			"confirm stage files with merge conflicts": "Are you sure you want to stage {0} files with merge conflicts?",
			"confirm stage file with merge conflicts": "Are you sure you want to stage {0} with merge conflicts?",
			"yes": "Yes",
			"keep ours": "Keep Our Version",
			"delete": "Delete File",
			"deleted by them": "File '{0}' was deleted by them and modified by us.\r\n\r\nWhat would you like to do?",
			"keep theirs": "Keep Their Version",
			"deleted by us": "File '{0}' was deleted by us and modified by them.\r\n\r\nWhat would you like to do?",
			"discard": "Odrzuć zmiany",
			"confirm delete": "Are you sure you want to DELETE {0}?\r\nThis is IRREVERSIBLE!\r\nThis file will be FOREVER LOST.",
			"delete file": "Delete file",
			"restore file": "Restore file",
			"confirm restore": "Are you sure you want to restore {0}?",
			"confirm discard": "Are you sure you want to discard changes in {0}?",
			"restore files": "Restore files",
			"confirm restore multiple": "Are you sure you want to restore {0} files?",
			"confirm discard multiple": "Are you sure you want to discard changes in {0} files?",
			"warn untracked": "This will DELETE {0} untracked files!\r\nThis is IRREVERSIBLE!\r\nThese files will be FOREVER LOST.",
			"there are untracked files single": "The following untracked file will be DELETED FROM DISK if discarded: {0}.",
			"there are untracked files": "There are {0} untracked files which will be DELETED FROM DISK if discarded.",
			"confirm discard all 2": "{0}\r\n\r\nThis is IRREVERSIBLE, your current working set will be FOREVER LOST.",
			"yes discard tracked": "Odrzuć 1 śledzony plik",
			"yes discard tracked multiple": "Discard {0} Tracked Files",
			"discardAll": "Discard All {0} Files",
			"confirm discard all single": "Are you sure you want to discard changes in {0}?",
			"confirm discard all": "Are you sure you want to discard ALL changes in {0} files?\r\nThis is IRREVERSIBLE!\r\nYour current working set will be FOREVER LOST.",
			"discardAll multiple": "Discard 1 File",
			"confirm delete multiple": "Are you sure you want to DELETE {0} files?",
			"delete files": "Delete Files",
			"unsaved files single": "The following file has unsaved changes which won't be included in the commit if you proceed: {0}.\r\n\r\nWould you like to save it before committing?",
			"unsaved files": "There are {0} unsaved files.\r\n\r\nWould you like to save them before committing?",
			"save and commit": "Save All & Commit",
			"commit": "Commit Anyway",
			"no staged changes": "There are no staged changes to commit.\r\n\r\nWould you like to automatically stage all your changes and commit them directly?",
			"always": "Zawsze",
			"never": "Nigdy",
			"no changes": "There are no changes to commit.",
			"no verify commit not allowed": "Zatwierdzenia bez weryfikacji są niedozwolone. Włącz je przy użyciu ustawienia „git.allowNoVerifyCommit”.",
			"confirm no verify commit": "Zamierzasz zatwierdzić zmiany bez weryfikacji. Powoduje to pominięcie wpięć pre-commit i może nie być pożądane.\r\n\r\nCzy na pewno chcesz kontynuować?",
			"ok": "OK",
			"never ask again": "OK, Don't Ask Again",
			"commitMessageWithHeadLabel2": "Message (commit on '{0}')",
			"commit message": "Wiadomość dotycząca zatwierdzenia",
			"provide commit message": "Please provide a commit message",
			"confirm emtpy commit": "Are you sure you want to create an empty commit?",
			"yes never again": "Yes, Don't Show Again",
			"no more": "Can't undo because HEAD doesn't point to any commit.",
			"undo commit": "Undo merge commit",
			"merge commit": "The last commit was a merge commit. Are you sure you want to undo it?",
			"select a ref to checkout": "Select a ref to checkout",
			"branch name": "Branch name",
			"provide branch name": "Please provide a new branch name",
			"branch name format invalid": "Branch name needs to match regex: {0}",
			"select a ref to create a new branch from": "Select a ref to create the '{0}' branch from",
			"select branch to delete": "Select a branch to delete",
			"confirm force delete branch": "The branch '{0}' is not fully merged. Delete anyway?",
			"delete branch": "Delete Branch",
			"invalid branch name": "Invalid branch name",
			"branch already exists": "Gałąź o nazwie '{0}' już istnieje",
			"select a branch to merge from": "Select a branch to merge from",
			"tag name": "Tag name",
			"provide tag name": "Please provide a tag name",
			"tag message": "Komunikat",
			"provide tag message": "Podaj wiadomość, która ma zostać adnotacją tagu",
			"no tags": "This repository has no tags.",
			"select a tag to delete": "Select a tag to delete",
			"no remotes to fetch": "This repository has no remotes configured to fetch from.",
			"no remotes to pull": "Your repository has no remotes configured to pull from.",
			"pick remote pull repo": "Pick a remote to pull the branch from",
			"pick branch pull": "Pick a branch to pull from",
			"addremote": "Add Remote",
			"no remotes to push": "Your repository has no remotes configured to push to.",
			"force push not allowed": "Force push is not allowed, please enable it with the 'git.allowForcePush' setting.",
			"confirm force push": "You are about to force push your changes, this can be destructive and could inadvertedly overwrite changes made by others.\r\n\r\nAre you sure to continue?",
			"nobranch": "Proszę sprawdzić gałąź, do wypchnnięcia do gałęzi zdalnej.",
			"confirm publish branch": "The branch '{0}' has no upstream branch. Would you like to publish this branch?",
			"pick remote": "Pick a remote to publish the branch '{0}' to:",
			"addfrom": "Add remote from {0}",
			"addFrom": "Add remote from URL",
			"remote name": "Remote name",
			"provide remote name": "Please provide a remote name",
			"remote name format invalid": "Remote name format invalid",
			"remote already exists": "Remote '{0}' already exists.",
			"no remotes added": "Your repository has no remotes.",
			"remove remote": "Pick a remote to remove",
			"sync is unpredictable": "This action will push and pull commits to and from '{0}/{1}'.",
			"never again": "OK, Don't Show Again",
			"no remotes to publish": "Your repository has no remotes configured to publish to.",
			"publish to": "Publish to {0}",
			"pick provider": "Pick a provider to publish the branch '{0}' to:",
			"no changes stash": "There are no changes to stash.",
			"provide stash message": "Optionally provide a stash message",
			"stash message": "Stash message",
			"pick stash to pop": "Pick a stash to pop",
			"no stashes": "There are no stashes in the repository.",
			"pick stash to apply": "Pick a stash to apply",
			"pick stash to drop": "Pick a stash to drop",
			"git.title.diffRefs": "{0} ({1}) \\u27f7 {0} ({2})",
			"open git log": "Open Git Log",
			"clean repo": "Please clean your repository working tree before checkout.",
			"cant push": "Can't push refs to remote. Try running 'Pull' first to integrate your changes.",
			"merge conflicts": "There are merge conflicts. Resolve them before committing.",
			"stash merge conflicts": "There were merge conflicts while applying the stash.",
			"auth failed specific": "Failed to authenticate to git remote:\r\n\r\n{0}",
			"auth failed": "Failed to authenticate to git remote.",
			"missing user info": "Make sure you configure your 'user.name' and 'user.email' in git.",
			"learn more": "Dowiedz się więcej",
			"git error details": "Git: {0}",
			"git error": "Git error"
		},
		"dist/askpass-main": {
			"missOrInvalid": "Missing or invalid credentials."
		}
	}
}